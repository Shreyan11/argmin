var searchIndex = new Map(JSON.parse('[\
["argmin",{"t":"QQQQCQQCNNNGKPPPKFFPRRKRKRPPPPFKRFGEKFPEPPPKFRRRRRRRRRFPFKKPPKPKPPGGPEPNNMNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNMNNNNOOONNNOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMNNNNNMNNNNMNNNNNNMNNNNNNNMNNNNMNNNMNNNMNNNNNNNNNNNNNNNNNNNNMNNNNNMNNNMNNNMNNNNOMNNNNMNNOMNNNNONNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNOOOMNNONNOOOOCNNNOOONNMMNNNNNNNNMCNNNNNNNNNNNNOONNOOOOOOOOOOOOOOOOOONNOONNONNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNOOONNNNMNNNNNNOOOCNMNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNOOOOOOOPKGPPNNNNNNNNMNNNNNMMNNNNNNNNNPPPPKGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCCCCCCCCCCCFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFKFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNFFKFNNNNNNNNNNNNCNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFKFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKPPRRRGFPMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFKNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["argmin_error","argmin_error_closure","bulk","check_param","core","float","kv","solver","A","A","A","ArgminError","ArgminFloat","Bool","CheckpointNotFound","ConditionViolated","CostFunction","Error","Executor","Float","Float","Float","Gradient","Gradient","Hessian","Hessian","ImpossibleError","Int","Interrupt","InvalidParameter","IterState","Jacobian","Jacobian","KV","KvValue","LineSearch","LinearProgram","LinearProgramState","MaxItersReached","NLCGBetaUpdate","NotImplemented","NotInitialized","NotTerminated","Operator","OptimizationResult","Output","Output","Param","Param","Param","Param","Param","Param","Param","PopulationState","PotentialBug","Problem","SendAlias","Solver","SolverConverged","SolverExit","State","Str","SyncAlias","TargetCostReached","Terminated","TerminationReason","TerminationStatus","Timeout","TrustRegionRadius","Uint","add_observer","anneal","apply","apply","as_ref","as_ref","as_string","b","b","b","backtrace","best_cost","best_cost","best_cost","best_individual","best_param","best_param","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bulk_apply","bulk_apply","bulk_apply","bulk_cost","bulk_cost","bulk_cost","bulk_gradient","bulk_gradient","bulk_gradient","bulk_hessian","bulk_hessian","bulk_hessian","bulk_jacobian","bulk_jacobian","bulk_jacobian","bulk_problem","c","c","c","chain","checkpointing","checkpointing","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","configure","consume_func_counts","consume_problem","context","cost","cost","cost","cost","cost","cost","cost","cost","counting","counting","counting","counting_enabled","counting_enabled","counting_enabled","counts","counts","counts","counts","ctrlc","default","default","default","default","default","default","deref","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","downcast","downcast_mut","downcast_ref","drop","eq","eq","eq","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","func_counts","func_counts","func_counts","func_counts","get","get_best_cost","get_best_cost","get_best_cost","get_best_cost","get_best_cost","get_best_cost","get_best_param","get_best_param","get_best_param","get_best_param","get_bool","get_cost","get_cost","get_cost","get_cost","get_cost","get_cost","get_float","get_func_counts","get_func_counts","get_func_counts","get_func_counts","get_gradient","get_hessian","get_int","get_inv_hessian","get_iter","get_iter","get_iter","get_iter","get_jacobian","get_last_best_iter","get_last_best_iter","get_last_best_iter","get_last_best_iter","get_max_iters","get_max_iters","get_max_iters","get_max_iters","get_param","get_param","get_param","get_param","get_population","get_prev_best_cost","get_prev_best_cost","get_prev_best_individual","get_prev_best_param","get_prev_cost","get_prev_cost","get_prev_gradient","get_prev_hessian","get_prev_individual","get_prev_inv_hessian","get_prev_jacobian","get_prev_param","get_prev_residuals","get_problem","get_residuals","get_string","get_target_cost","get_target_cost","get_target_cost","get_target_cost","get_target_cost","get_target_cost","get_termination_reason","get_termination_reason","get_termination_reason","get_termination_reason","get_termination_status","get_termination_status","get_termination_status","get_termination_status","get_time","get_time","get_time","get_time","get_uint","grad","gradient","gradient","gradient","hash","hash","hessian","hessian","hessian","hessian","increment_iter","increment_iter","increment_iter","increment_iter","individual","individual","init","init","insert","into","into","into","into","into","into","into","into","into","into","into","into","inv_hessian","inv_hessian","is","is_best","is_best","is_best","is_best","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","iter","iter","iter","jacobian","jacobian","jacobian","jacobian","keys","kind","kv","last_best_iter","last_best_iter","last_best_iter","macros","max_iters","max_iters","max_iters","max_iters","max_iters","max_iters","merge","msg","name","new","new","new","new","new","new","new","new","new","next_iter","observers","parallelize","parallelize","parallelize","parallelize","parallelize","parallelize","parallelize","parallelize","parallelize","parallelize","param","param","param","param","partial_cmp","population","population","prev_best_cost","prev_best_cost","prev_best_cost","prev_best_individual","prev_best_param","prev_best_param","prev_cost","prev_cost","prev_cost","prev_grad","prev_hessian","prev_individual","prev_inv_hessian","prev_jacobian","prev_param","prev_param","prev_residuals","problem","problem","problem","problem","reset","residuals","residuals","root_cause","run","serialize","serialize","serialize","serialize","serialize","serialize","serialize","solver","solver","state","state","take_best_individual","take_best_param","take_gradient","take_hessian","take_individual","take_inv_hessian","take_jacobian","take_param","take_population","take_prev_best_individual","take_prev_best_param","take_prev_gradient","take_prev_hessian","take_prev_individual","take_prev_inv_hessian","take_prev_jacobian","take_prev_param","take_prev_residuals","take_problem","take_residuals","target_cost","target_cost","target_cost","target_cost","target_cost","target_cost","terminate","terminate","terminate_internal","terminate_internal","terminate_with","terminate_with","terminate_with","terminate_with","terminated","terminated","terminated","termination_status","termination_status","termination_status","test_utils","text","time","time","time","time","time","time","time","timeout","timer","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","update","update","update","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","text","text","text","text","text","text","text","Always","Checkpoint","CheckpointingFrequency","Every","Never","borrow","borrow_mut","clone","clone_into","default","eq","fmt","fmt","frequency","from","from_subset","hash","into","is_in_subset","load","save","save_cond","to_owned","to_string","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","Always","Every","Never","NewBest","Observe","ObserverMode","Observers","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deserialize","eq","fmt","from","from","from_subset","from_subset","into","into","is_empty","is_in_subset","is_in_subset","new","observe_final","observe_final","observe_init","observe_init","observe_iter","observe_iter","push","serialize","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","TestProblem","TestSolver","TestSparseProblem","anneal","apply","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cost","cost","default","default","default","deserialize","deserialize","deserialize","eq","eq","eq","fmt","fmt","fmt","from","from","from","from_subset","from_subset","from_subset","gradient","gradient","hash","hash","hessian","into","into","into","is_in_subset","is_in_subset","is_in_subset","jacobian","name","new","new","new","next_iter","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","brent","conjugategradient","gaussnewton","goldensectionsearch","gradientdescent","landweber","linesearch","neldermead","newton","particleswarm","quasinewton","simulatedannealing","trustregion","BrentOpt","BrentRoot","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","deserialize","from","from","from_subset","from_subset","init","init","into","into","is_in_subset","is_in_subset","name","name","new","new","next_iter","next_iter","serialize","serialize","set_tolerance","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ConjugateGradient","NonlinearConjugateGradient","beta","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","deserialize","from","from","from_subset","from_subset","get_prev_p","init","init","into","into","is_in_subset","is_in_subset","name","name","new","new","next_iter","next_iter","restart_iters","restart_orthogonality","serialize","serialize","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","FletcherReeves","HestenesStiefel","NLCGBetaUpdate","PolakRibiere","PolakRibierePlus","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","default","deserialize","deserialize","deserialize","deserialize","fmt","fmt","fmt","fmt","from","from","from","from","from_subset","from_subset","from_subset","from_subset","into","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","new","new","new","new","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update","update","update","update","update","vzip","vzip","vzip","vzip","GaussNewton","GaussNewtonLS","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deserialize","deserialize","from","from","from_subset","from_subset","init","into","into","is_in_subset","is_in_subset","name","name","new","new","next_iter","next_iter","serialize","serialize","terminate","terminate","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_gamma","with_tolerance","with_tolerance","GoldenSectionSearch","borrow","borrow_mut","clone","clone_into","deserialize","from","from_subset","init","into","is_in_subset","name","new","next_iter","serialize","terminate","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","with_tolerance","SteepestDescent","borrow","borrow_mut","clone","clone_into","deserialize","from","from_subset","into","is_in_subset","name","new","next_iter","serialize","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","Landweber","borrow","borrow_mut","clone","clone_into","deserialize","from","from_subset","into","is_in_subset","name","new","next_iter","serialize","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","BacktrackingLineSearch","HagerZhangLineSearch","LineSearch","MoreThuenteLineSearch","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","condition","default","default","deserialize","deserialize","deserialize","eq","fmt","from","from","from","from_subset","from_subset","from_subset","init","init","init","initial_step_length","initial_step_length","initial_step_length","initial_step_length","into","into","into","is_in_subset","is_in_subset","is_in_subset","name","name","name","new","new","new","next_iter","next_iter","next_iter","rho","search_direction","search_direction","search_direction","search_direction","serialize","serialize","serialize","terminate","terminate","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_bounds","with_bounds","with_c","with_delta_sigma","with_epsilon","with_eta","with_gamma","with_theta","with_width_tolerance","ArmijoCondition","GoldsteinCondition","LineSearchCondition","StrongWolfeCondition","WolfeCondition","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","default","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","evaluate_condition","evaluate_condition","evaluate_condition","evaluate_condition","evaluate_condition","fmt","fmt","fmt","fmt","from","from","from","from","from_subset","from_subset","from_subset","from_subset","into","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","new","new","new","new","requires_current_gradient","requires_current_gradient","requires_current_gradient","requires_current_gradient","requires_current_gradient","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","NelderMead","borrow","borrow_mut","clone","clone_into","deserialize","from","from_subset","init","into","is_in_subset","name","new","next_iter","serialize","terminate","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","with_alpha","with_gamma","with_rho","with_sd_tolerance","with_sigma","Newton","NewtonCG","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deserialize","deserialize","from","from","from_subset","from_subset","into","into","is_in_subset","is_in_subset","name","name","new","new","next_iter","next_iter","serialize","serialize","terminate","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_curvature_threshold","with_gamma","with_tolerance","Particle","ParticleSwarm","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cost","deserialize","deserialize","eq","fmt","from","from","from_subset","from_subset","init","into","into","is_in_subset","is_in_subset","name","new","new","next_iter","position","serialize","serialize","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_cognitive_factor","with_inertia_factor","with_rng_generator","with_social_factor","BFGS","DFP","LBFGS","SR1","SR1TrustRegion","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","deserialize","deserialize","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","into","into","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","name","name","name","name","name","new","new","new","new","new","next_iter","next_iter","next_iter","next_iter","next_iter","serialize","serialize","serialize","serialize","serialize","terminate","terminate","terminate","terminate","terminate","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_denominator_factor","with_denominator_factor","with_eta","with_l1_regularization","with_radius","with_tolerance_cost","with_tolerance_cost","with_tolerance_cost","with_tolerance_grad","with_tolerance_grad","with_tolerance_grad","with_tolerance_grad","with_tolerance_grad","Anneal","Boltzmann","Exponential","Float","Output","Param","SATempFunc","SimulatedAnnealing","TemperatureFast","anneal","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deserialize","deserialize","eq","fmt","from","from","from_subset","from_subset","init","into","into","is_in_subset","is_in_subset","name","new","new_with_rng","next_iter","serialize","serialize","terminate","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_reannealing_accepted","with_reannealing_best","with_reannealing_fixed","with_stall_accepted","with_stall_best","with_temp_func","CauchyPoint","Dogleg","Steihaug","TrustRegion","TrustRegionRadius","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","deserialize","deserialize","deserialize","deserialize","eq","eq","fmt","fmt","from","from","from","from","from_subset","from_subset","from_subset","from_subset","init","init","into","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","name","name","name","name","new","new","new","new","next_iter","next_iter","next_iter","next_iter","partial_cmp","partial_cmp","reduction_ratio","serialize","serialize","serialize","serialize","set_radius","set_radius","set_radius","set_radius","terminate","terminate","terminate","terminate","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","with_epsilon","with_eta","with_max_iters","with_max_radius","with_radius"],"q":[[0,"argmin"],[8,"argmin::core"],[621,"argmin::core::ArgminError"],[628,"argmin::core::checkpointing"],[658,"argmin::core::observers"],[710,"argmin::core::test_utils"],[788,"argmin::solver"],[801,"argmin::solver::brent"],[846,"argmin::solver::conjugategradient"],[894,"argmin::solver::conjugategradient::beta"],[984,"argmin::solver::gaussnewton"],[1033,"argmin::solver::goldensectionsearch"],[1057,"argmin::solver::gradientdescent"],[1078,"argmin::solver::landweber"],[1099,"argmin::solver::linesearch"],[1191,"argmin::solver::linesearch::condition"],[1290,"argmin::solver::neldermead"],[1318,"argmin::solver::newton"],[1365,"argmin::solver::particleswarm"],[1414,"argmin::solver::quasinewton"],[1542,"argmin::solver::simulatedannealing"],[1601,"argmin::solver::trustregion"],[1711,"argmin::core::problem"],[1712,"alloc::vec"],[1713,"anyhow"],[1714,"core::result"],[1715,"argmin::core::float"],[1716,"argmin::core::executor"],[1717,"argmin::core::state"],[1718,"argmin::core::solver"],[1719,"core::error"],[1720,"argmin::core::kv"],[1721,"alloc::string"],[1722,"std::backtrace"],[1723,"core::borrow"],[1724,"argmin::core::parallelization"],[1725,"core::ops::function"],[1726,"core::clone"],[1727,"argmin::core::result"],[1728,"argmin::core::state::iterstate"],[1729,"argmin::core::state::linearprogramstate"],[1730,"argmin::core::state::populationstate"],[1731,"argmin::core::termination"],[1732,"core::cmp"],[1733,"core::fmt"],[1734,"core::marker"],[1735,"core::default"],[1736,"serde::de"],[1737,"core::option"],[1738,"core::iter::traits::collect"],[1739,"argmin::core::errors"],[1740,"core::convert"],[1741,"std::collections::hash::map"],[1742,"core::time"],[1743,"core::hash"],[1744,"serde::ser"],[1745,"core::any"],[1746,"argmin::solver::brent::brentopt"],[1747,"argmin::solver::brent::brentroot"],[1748,"argmin::solver::conjugategradient::cg"],[1749,"argmin::solver::conjugategradient::nonlinear_cg"],[1750,"argmin_math"],[1751,"argmin::solver::gaussnewton::gaussnewton_linesearch"],[1752,"argmin::solver::gaussnewton::gaussnewton_method"],[1753,"argmin::solver::gradientdescent::steepestdescent"],[1754,"argmin::solver::linesearch::backtracking"],[1755,"argmin::solver::linesearch::hagerzhang"],[1756,"argmin::solver::linesearch::morethuente"],[1757,"argmin::solver::linesearch::condition::armijo"],[1758,"argmin::solver::linesearch::condition::goldstein"],[1759,"argmin::solver::linesearch::condition::strongwolfe"],[1760,"argmin::solver::linesearch::condition::wolfe"],[1761,"argmin::solver::newton::newton_cg"],[1762,"argmin::solver::newton::newton_method"],[1763,"rand::rng"],[1764,"rand::rngs::std"],[1765,"argmin::solver::quasinewton::bfgs"],[1766,"argmin::solver::quasinewton::dfp"],[1767,"argmin::solver::quasinewton::lbfgs"],[1768,"argmin::solver::quasinewton::sr1"],[1769,"argmin::solver::quasinewton::sr1_trustregion"],[1770,"rand_xoshiro::xoshiro256plusplus"],[1771,"argmin::solver::trustregion::cauchypoint"],[1772,"argmin::solver::trustregion::dogleg"],[1773,"argmin::solver::trustregion::steihaug"],[1774,"argmin::solver::trustregion::trustregion_method"]],"i":[0,0,0,0,0,0,0,0,3,3,8,0,0,18,61,61,0,0,0,18,3,11,0,26,0,28,61,18,43,61,0,0,30,0,0,0,0,0,43,0,61,61,42,0,0,16,24,16,24,26,28,30,3,11,0,61,0,0,0,43,43,0,18,0,43,42,0,0,43,0,18,9,8,16,8,5,5,18,3,3,8,5,39,40,41,41,39,40,9,5,61,18,36,8,38,39,40,41,42,43,9,5,61,18,36,8,38,39,40,41,42,43,16,16,8,24,24,8,26,26,8,28,28,8,30,30,8,8,3,3,8,5,0,9,18,36,8,38,39,40,41,42,43,18,36,8,38,39,40,41,42,43,38,9,8,8,5,24,8,39,40,41,39,40,41,39,40,41,39,40,41,8,39,40,41,9,36,8,39,41,42,43,5,5,18,36,39,40,41,42,43,5,5,5,5,18,36,38,39,41,42,43,36,5,5,61,61,18,18,36,36,8,38,39,40,41,42,42,43,43,9,5,5,5,61,18,18,18,18,18,18,18,18,18,18,36,8,38,39,40,41,42,43,36,9,5,61,18,36,8,38,39,40,41,42,43,11,39,40,41,36,11,39,39,40,41,41,11,39,40,41,18,11,39,39,40,41,41,18,11,39,40,41,39,39,18,39,11,39,40,41,39,11,39,40,41,11,39,40,41,11,39,40,41,41,39,41,41,39,39,41,39,39,41,39,39,39,39,8,39,18,11,39,39,40,41,41,11,39,40,41,11,39,40,41,11,39,40,41,18,39,26,8,39,42,43,28,8,39,39,11,39,40,41,41,41,12,12,36,9,5,61,18,36,8,38,39,40,41,42,43,39,39,5,11,39,40,41,9,5,61,18,36,8,38,39,40,41,42,43,39,40,41,30,8,39,39,36,18,36,39,40,41,0,39,40,41,39,40,41,36,5,12,11,9,5,36,8,38,39,40,41,12,0,16,16,24,24,26,26,28,28,30,30,39,40,39,40,38,41,41,39,40,41,41,39,40,39,40,41,39,39,41,39,39,39,40,39,8,38,8,38,8,39,39,5,9,18,36,39,40,41,42,43,38,38,38,38,41,39,39,39,41,39,39,39,41,41,39,39,39,41,39,39,39,39,8,39,39,40,41,39,40,41,12,12,12,12,11,39,40,41,11,11,42,39,40,41,0,43,11,39,40,41,39,40,41,9,9,18,36,8,38,39,40,41,42,43,5,61,18,36,38,42,43,9,5,61,18,36,8,38,39,40,41,42,43,9,5,61,18,36,8,38,39,40,41,42,43,9,5,61,18,36,8,38,39,40,41,42,43,9,5,61,18,36,8,38,39,40,41,42,43,9,5,61,18,36,8,38,39,40,41,42,43,11,39,40,41,9,5,61,18,36,8,38,39,40,41,42,43,136,137,138,139,140,141,142,77,0,0,77,77,77,77,77,77,77,77,77,77,35,77,77,77,77,77,35,35,35,77,77,77,77,77,77,77,77,10,10,10,10,0,0,0,78,10,78,10,78,10,78,10,78,10,10,10,10,78,10,78,10,78,10,78,78,10,78,13,78,13,78,13,78,78,10,78,10,78,10,78,10,78,10,78,10,78,10,78,10,0,0,0,79,79,79,80,81,79,80,81,79,80,81,79,80,81,79,80,79,80,81,79,80,81,79,80,81,79,80,81,79,80,81,79,80,81,79,80,79,80,79,79,80,81,79,80,81,79,81,79,80,81,81,79,80,81,79,80,81,79,80,81,79,80,81,79,80,81,79,80,81,79,80,81,79,80,81,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,82,83,82,83,82,83,82,83,82,83,82,83,82,83,82,83,82,83,82,83,82,83,82,83,82,83,82,83,82,82,83,82,83,82,83,82,83,82,83,82,83,82,83,0,0,0,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,84,85,84,85,84,85,84,85,84,85,84,85,85,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,0,0,0,0,0,91,92,93,94,91,92,93,94,91,92,93,94,91,92,93,94,91,92,93,94,91,92,93,94,91,92,93,94,91,92,93,94,91,92,93,94,91,92,93,94,91,92,93,94,91,92,93,94,91,92,93,94,91,92,93,94,91,92,93,94,91,92,93,94,91,92,93,94,91,92,93,94,91,92,93,94,90,91,92,93,94,91,92,93,94,0,0,96,97,96,97,96,97,96,97,97,96,97,96,97,96,97,97,96,97,96,97,96,97,96,97,96,97,96,97,96,97,96,97,96,97,96,97,96,97,96,97,96,97,96,97,97,96,97,0,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,0,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,0,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,0,0,0,0,104,105,106,104,105,106,104,105,106,104,105,106,0,105,106,104,105,106,104,104,104,105,106,104,105,106,104,105,106,89,104,105,106,104,105,106,104,105,106,104,105,106,104,105,106,104,105,106,104,89,104,105,106,104,105,106,104,105,104,105,106,104,105,106,104,105,106,104,105,106,104,105,106,104,105,106,104,105,106,105,106,106,105,105,105,105,105,106,0,0,0,0,0,108,109,110,111,108,109,110,111,108,109,110,111,108,109,110,111,108,109,110,111,108,109,110,111,108,109,110,111,107,108,109,110,111,108,109,110,111,108,109,110,111,108,109,110,111,108,109,110,111,108,109,110,111,108,109,110,111,107,108,109,110,111,108,109,110,111,108,109,110,111,108,109,110,111,108,109,110,111,108,109,110,111,108,109,110,111,108,109,110,111,108,109,110,111,0,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,0,0,113,114,113,114,113,114,113,114,114,113,114,113,114,113,114,113,114,113,114,113,114,113,114,113,114,113,114,113,113,114,113,114,113,114,113,114,113,114,113,114,113,114,113,114,113,0,0,115,116,115,116,115,116,115,116,116,115,116,116,116,115,116,115,116,115,115,116,115,116,115,115,116,115,116,115,116,115,116,115,116,115,116,115,116,115,116,115,116,115,116,115,115,115,115,0,0,0,0,0,119,120,121,122,123,119,120,121,122,123,119,120,121,122,123,119,120,121,122,123,119,120,121,122,123,119,120,121,122,123,119,120,121,122,123,119,120,121,122,123,119,120,121,122,123,119,120,121,122,123,119,120,121,122,123,119,120,121,122,123,119,120,121,122,123,119,120,121,122,123,119,120,121,122,123,119,120,121,122,123,119,120,121,122,123,119,120,121,122,123,119,120,121,122,123,119,120,121,122,123,119,120,121,122,123,119,120,121,122,123,122,123,123,121,123,119,121,122,119,120,121,122,123,0,127,127,14,14,14,0,0,127,14,127,128,127,128,127,128,127,128,127,127,128,127,127,127,128,127,128,128,127,128,127,128,128,128,128,128,127,128,128,127,128,127,128,127,128,127,128,127,128,127,128,127,128,128,128,128,128,128,128,0,0,0,0,0,130,131,132,133,130,131,132,133,130,131,132,133,130,131,132,133,130,131,132,130,131,132,133,130,131,130,131,130,131,132,133,130,131,132,133,132,133,130,131,132,133,130,131,132,133,130,131,132,133,130,131,132,133,130,131,132,133,130,131,0,130,131,132,133,126,130,131,132,130,131,132,133,130,131,132,133,130,131,132,133,130,131,132,133,130,131,132,133,130,131,132,133,130,131,132,133,130,131,132,133,132,133,132,133,133],"f":"````````{{{f{}{{b{c}}{d{e}}}}}{{l{{h{{h{e}}}}j}}}{}n}0{{{A`{c}}}{{l{{h{h}}j}}}f}````````````````````````````````````````````````````````````{{{Ab{cge}}iAd}{{Ab{cge}}}{}Af{{Ah{ce}}}{{Aj{e}}}}{{{A`{c}}}{{l{j}}}Al}{{{B`{}{{b{c}}{An{e}}}}c}{{l{ej}}}{}{}}{{{A`{c}}}{{l{j}}}B`}{jBb}0{BdBf}{{{f{}{{b{c}}{d{e}}}}}{{l{{h{e}}j}}}{}n}0{{{A`{c}}}{{l{hj}}}f}{jBh}``````{ce{}{}}00000000000000000000000{{{B`{}{{b{c}}{An{e}}}}{Bj{g}}}{{l{{h{e}}j}}}{}{}{{Bl{c}}Bn}}0{{{A`{c}}{Bj{e}}}{{l{hj}}}{BnB`}{BlBn}}{{{C`{}{{b{c}}{An{e}}}}{Bj{g}}}{{l{{h{e}}j}}}{}{}{{Bl{c}}Bn}}0{{{A`{c}}{Bj{e}}}{{l{hj}}}{BnC`}{BlBn}}{{{Cd{}{{b{c}}{Cb{e}}}}{Bj{g}}}{{l{{h{e}}j}}}{}{}{{Bl{c}}Bn}}0{{{A`{c}}{Bj{e}}}{{l{hj}}}{BnCd}{BlBn}}{{{Ch{}{{b{c}}{Cf{e}}}}{Bj{g}}}{{l{{h{e}}j}}}{}{}{{Bl{c}}Bn}}0{{{A`{c}}{Bj{e}}}{{l{hj}}}{BnCh}{BlBn}}{{{Cl{}{{b{c}}{Cj{e}}}}{Bj{g}}}{{l{{h{e}}j}}}{}{}{{Bl{c}}Bn}}0{{{A`{c}}{Bj{e}}}{{l{hj}}}{BnCl}{BlBn}}{{{A`{c}}CnD`g}{{l{ej}}}{}{}{{Db{c}{{An{{l{ej}}}}}}}}>>={jDd}`{{{Ab{cge}}i}{{Ab{cge}}}{}Af{{Ah{ce}}}{{Df{ge}}}}{BdBd}{DhDh}{{{A`{c}}}{{A`{c}}}Dj}{{{Dl{ceg}}}{{Dl{ceg}}}DjDjDj}{{{Dn{cegikm}}}{{Dn{cegikm}}}DjDjDjDjDjDj}{{{E`{ce}}}{{E`{ce}}}DjDj}{{{Eb{ce}}}{{Eb{ce}}}DjDj}{EdEd}{EfEf}{{ce}Eh{}{}}00000000{{{Dl{ceg}}{Dl{ceg}}}Ej{}{}Af}{{{Ab{cge}}i}{{Ab{cge}}}{}Af{{Ah{ce}}}{{Db{e}{{An{e}}}}}}{{{A`{c}}{A`{e}}}Eh{}{}}{{{A`{c}}{A`{c}}}Eh{}}{{jc}j{ElEnF`}}{{{C`{}{{b{c}}{An{e}}}}c}{{l{ej}}}{}{}}{{{A`{c}}}{{l{j}}}C`}{{{Dn{cegikm}}m}{{Dn{cegikm}}}{}{}{}{}{}n}{{{E`{ce}}e}{{E`{ce}}}{}{}}{{{Eb{ce}}e}{{Eb{ce}}}{}n}```{{{Dn{cegikm}}Fb}{{Dn{cegikm}}}{}{}{}{}{}n}{{{E`{ce}}Fb}{{E`{ce}}}{}{}}{{{Eb{ce}}Fb}{{Eb{ce}}}{}n}```````{{{Ab{cge}}Fb}{{Ab{cge}}}{}Af{{Ah{ce}}}}{{}Dh}{{}{{A`{c}}}Fd}{{}{{Dn{cegikm}}}FdFdFdFdFdFd}{{}{{Eb{ce}}}FdFd}{{}Ed}{{}Ef}{j}0{c{{l{Bd}}}Ff}{c{{l{Dh}}}Ff}{c{{l{{Dn{egikmo}}}}}FfFhFhFhFhFhFh}{c{{l{{E`{eg}}}}}FfFhFh}{c{{l{{Eb{eg}}}}}FfFhFh}{c{{l{Ed}}}Ff}{c{{l{Ef}}}Ff}{j{{l{cj}}}{ElFjEnF`}}{j{{Fl{c}}}{ElFjEnF`}}0{jEh}{{BdBd}Fb}{{DhDh}Fb}{{{Dl{ceg}}{Dl{ceg}}}Fb{}{}Af}{{{Dn{cegikm}}{Dn{cegikm}}}FbFnFnFnFnFnFn}{{{Eb{ce}}{Eb{ce}}}FbFnFn}{{EdEd}Fb}{{EfEf}Fb}{{Dhc}Eh{{Gd{}{{G`{{Gb{CnBd}}}}}}}}{{jGf}{{l{EhGh}}}}0{{GjGf}Gl}0{{BdGf}Gl}0{{DhGf}Gl}0{{{A`{c}}Gf}GlFj}{{{Dl{cge}}Gf}Gl{}Af{{Ah{ce}}}}{{{Dn{cegikm}}Gf}GlFjFjFjFjFjFj}{{{E`{ce}}Gf}GlFjFj}{{{Eb{ce}}Gf}GlFjFj}{{EdGf}Gl}0{{EfGf}Gl}0{cc{}}{cj{BbEnF`}}{Gnc{}}22{H`Bd}3{BfBd}{HbBd}{HdBd}{HfBd}{CnBd}{FbBd}{HhBd}{HjBd};;;;;;;;{cDh{{Gd{}{{G`{{Gb{CnBd}}}}}}}}{ce{}{}}00000000000{{{Af{}{{b{c}}{d{e}}}}{A`{g}}}Eh{}n{}}{{{Dn{cegikm}}{A`{o}}}EhDj{}{}{}{}n{}}{{{E`{ce}}{A`{g}}}EhDjn{}}{{{Eb{ce}}{A`{g}}}EhDjn{}}{{Dhc}{{Fl{Bd}}}{{Hl{Cn}}}}{{{Af{}{{b{c}}{d{e}}}}}e{}n}{{{Dn{cegikm}}}oDj{}{}{}{}n{}}{{{Dn{cegikm}}}m{}{}{}{}{}n}{{{E`{ce}}}gDjn{}}{{{Eb{ce}}}gDjn{}}{{{Eb{ce}}}e{}n}{{{Af{}{{b{c}}{d{e}}}}}{{Fl{c}}}{}n}{{{Dn{cegikm}}}{{Fl{c}}}Dj{}{}{}{}n}{{{E`{ce}}}{{Fl{c}}}Djn}{{{Eb{ce}}}{{Fl{c}}}Djn}{Bd{{Fl{Fb}}}}:89765{Bd{{Fl{H`}}}}{{{Af{}{{b{c}}{d{e}}}}}{{Hn{BfHh}}}{}n}{{{Dn{cegikm}}}{{Hn{BfHh}}}Dj{}{}{}{}n}{{{E`{ce}}}{{Hn{BfHh}}}Djn}{{{Eb{ce}}}{{Hn{BfHh}}}Djn}{{{Dn{cegikm}}}{{Fl{e}}}{}{}{}{}{}n}{{{Dn{cegikm}}}{{Fl{i}}}{}{}{}{}{}n}{Bd{{Fl{Hd}}}}1{{{Af{}{{b{c}}{d{e}}}}}Hh{}n}{{{Dn{cegikm}}}HhDj{}{}{}{}n}{{{E`{ce}}}HhDjn}{{{Eb{ce}}}HhDjn}{{{Dn{cegikm}}}{{Fl{g}}}{}{}{}{}{}n}43214321{{{Af{}{{b{c}}{d{e}}}}}{{Fl{c}}}{}n}{{{Dn{cegikm}}}{{Fl{c}}}Dj{}{}{}{}n}{{{E`{ce}}}{{Fl{c}}}Djn}{{{Eb{ce}}}{{Fl{c}}}Djn}{{{Eb{ce}}}{{Fl{{h{c}}}}}{}n}{{{Dn{cegikm}}}m{}{}{}{}{}n}{{{Eb{ce}}}e{}n}{{{Eb{ce}}}{{Fl{c}}}{}n}{{{Dn{cegikm}}}{{Fl{c}}}{}{}{}{}{}n}32{{{Dn{cegikm}}}{{Fl{e}}}{}{}{}{}{}n}{{{Dn{cegikm}}}{{Fl{i}}}{}{}{}{}{}n}30;2{{{Dn{cegikm}}}{{Fl{k}}}{}{}{}{}{}n}{{{A`{c}}}{{Fl{c}}}{}}1{Bd{{Fl{Bf}}}}{{{Af{}{{b{c}}{d{e}}}}}e{}n}9{{{Dn{cegikm}}}oDj{}{}{}{}n{}}{{{E`{ce}}}gDjn{}}{{{Eb{ce}}}gDjn{}};{{{Af{}{{b{c}}{d{e}}}}}{{Fl{Ef}}}{}n}{{{Dn{cegikm}}}{{Fl{Ef}}}Dj{}{}{}{}n}{{{E`{ce}}}{{Fl{Ef}}}Djn}{{{Eb{ce}}}{{Fl{Ef}}}Djn}{{{Af{}{{b{c}}{d{e}}}}}Ed{}n}{{{Dn{cegikm}}}EdDj{}{}{}{}n}{{{E`{ce}}}EdDjn}{{{Eb{ce}}}EdDjn}{{{Af{}{{b{c}}{d{e}}}}}{{Fl{I`}}}{}n}{{{Dn{cegikm}}}{{Fl{I`}}}Dj{}{}{}{}n}{{{E`{ce}}}{{Fl{I`}}}Djn}{{{Eb{ce}}}{{Fl{I`}}}Djn}{Bd{{Fl{Hh}}}}`{{{Cd{}{{b{c}}{Cb{e}}}}c}{{l{ej}}}{}{}}{{{A`{c}}}{{l{j}}}Cd}{{{Dn{cegikm}}e}{{Dn{cegikm}}}{}{}{}{}{}n}{{Edc}EhIb}{{Efc}EhIb}{{{Ch{}{{b{c}}{Cf{e}}}}c}{{l{ej}}}{}{}}{{{A`{c}}}{{l{j}}}Ch}{{{Dn{cegikm}}i}{{Dn{cegikm}}}{}{}{}{}{}n}`{{{Af{}{{b{c}}{d{e}}}}}Eh{}n}{{{Dn{cegikm}}}EhDj{}{}{}{}n}{{{E`{ce}}}EhDjn}{{{Eb{ce}}}EhDjn}{{{Eb{ce}}c}{{Eb{ce}}}{}n}`{{Ah{A`{c}}e}{{l{{Gb{e{Fl{Dh}}}}j}}}{}Af}0{{DhcBd}Dh{{Hl{Cn}}}}{ce{}{}}000000000008`{jFb}{{{Af{}{{b{c}}{d{e}}}}}Fb{}n}{{{Dn{cegikm}}}FbDj{}{}{}{}n}{{{E`{ce}}}FbDjn}{{{Eb{ce}}}FbDjn}{cFb{}}00000000000```{{{Cl{}{{b{c}}{Cj{e}}}}c}{{l{ej}}}{}{}}{{{A`{c}}}{{l{j}}}Cl}{{{Dn{cegikm}}g}{{Dn{cegikm}}}{}{}{}{}{}n}`{Dh{{h{{Gb{BfCn}}}}}}{BdCn}`````{{{Dn{cegikm}}Hh}{{Dn{cegikm}}}{}{}{}{}{}n}{{{E`{ce}}Hh}{{E`{ce}}}{}{}}{{{Eb{ce}}Hh}{{Eb{ce}}}{}n}```{{DhDh}Dh}{cj{ElFjEnF`}}{AhCn}{{}{{Af{}{{b{c}}{d{e}}}}}{}n}{{cg}{{Ab{cge}}}{}Af{{Ah{ce}}}}{cj{BbEnF`}}{{}Dh}{c{{A`{c}}}{}}{{{A`{c}}eg}{{Dl{ceg}}}{}{}{}}{{}{{Dn{cegikm}}}Dj{}{}{}{}n}{{}{{E`{ce}}}Djn}{{}{{Eb{ce}}}Djn}{{Ah{A`{c}}e}{{l{{Gb{e{Fl{Dh}}}}j}}}{}Af}`{{{B`{}{{b{c}}{An{e}}}}}Fb{}{}}0{{{C`{}{{b{c}}{An{e}}}}}Fb{}{}}0{{{Cd{}{{b{c}}{Cb{e}}}}}Fb{}{}}0{{{Ch{}{{b{c}}{Cf{e}}}}}Fb{}{}}0{{{Cl{}{{b{c}}{Cj{e}}}}}Fb{}{}}0{{{Dn{cegikm}}c}{{Dn{cegikm}}}{}{}{}{}{}n}{{{E`{ce}}c}{{E`{ce}}}{}{}}``{{{Dl{ceg}}{Dl{ceg}}}{{Fl{Ej}}}{}{}Af}{{{Eb{ce}}{h{c}}}{{Eb{ce}}}{}n}``````````````````{{{A`{c}}Cng}{{l{ej}}}{}{}{{Db{c}{{An{{l{ej}}}}}}}}{{{Dl{ceg}}}{{A`{c}}}{}{}{}}``{{{A`{c}}}Eh{}}{{{Dn{cegikm}}k}{{Dn{cegikm}}}{}{}{}{}{}n}`{jBb}{{{Ab{cge}}}{{l{{Dl{cge}}j}}}{}Af{{Ah{ce}}}}{{Bdc}lId}{{Dhc}lId}{{{Dn{cegikm}}o}lIfIfIfIfIfIfId}{{{E`{ce}}g}lIfIfId}{{{Eb{ce}}g}lIfIfId}{{Edc}lId}{{Efc}lId}{{{Dl{ceg}}}e{}{}{}}`{{{Dl{ceg}}}g{}{}{}}`{{{Eb{ce}}}{{Fl{c}}}{}n}{{{Dn{cegikm}}}{{Fl{c}}}{}{}{}{}{}n}{{{Dn{cegikm}}}{{Fl{e}}}{}{}{}{}{}n}{{{Dn{cegikm}}}{{Fl{i}}}{}{}{}{}{}n}30{{{Dn{cegikm}}}{{Fl{g}}}{}{}{}{}{}n}3{{{Eb{ce}}}{{Fl{{h{c}}}}}{}n}54325214{{{Dn{cegikm}}}{{Fl{k}}}{}{}{}{}{}n}{{{A`{c}}}{{Fl{c}}}{}}1{{{Dn{cegikm}}m}{{Dn{cegikm}}}{}{}{}{}{}n}{{{E`{ce}}e}{{E`{ce}}}{}{}}{{{Eb{ce}}e}{{Eb{ce}}}{}n}```{{Ahc}EdAf}000{{{Af{}{{b{c}}{d{e}}}}Ef}{{Af{}{{b{c}}{d{e}}}}}{}n}{{{Dn{cegikm}}Ef}{{Dn{cegikm}}}Dj{}{}{}{}n}{{{E`{ce}}Ef}{{E`{ce}}}Djn}{{{Eb{ce}}Ef}{{Eb{ce}}}Djn}{{{Af{}{{b{c}}{d{e}}}}}Fb{}n}0{EdFb}````{EfCn}{{{Af{}{{b{c}}{d{e}}}}{Fl{I`}}}{{Af{}{{b{c}}{d{e}}}}}{}n}{{{Dn{cegikm}}{Fl{I`}}}{{Dn{cegikm}}}Dj{}{}{}{}n}{{{E`{ce}}{Fl{I`}}}{{E`{ce}}}Djn}{{{Eb{ce}}{Fl{I`}}}{{Eb{ce}}}Djn}```{{{Ab{cge}}I`}{{Ab{cge}}}{}Af{{Ah{ce}}}}{{{Ab{cge}}Fb}{{Ab{cge}}}{}Af{{Ah{ce}}}}{ce{}{}}00000000{cBf{}}000000{c{{Fl{e}}}{}{}}00000000000222222222222{c{{l{e}}}{}{}}00000000000000000000000{cIh{}}00000000000{{{Af{}{{b{c}}{d{e}}}}}Eh{}n}{{{Dn{cegikm}}}EhDj{}{}{}{}n}{{{E`{ce}}}EhDjn}{{{Eb{ce}}}EhDjn}888888888888````````````88{IjIj}{{ce}Eh{}{}}{{}Ij}{{IjIj}Fb}{{IjGf}Gl}0{DfIj}{cc{}}?{{Ijc}EhIb}{ce{}{}}{cFb{}}{Df{{l{{Fl{{Gb{ce}}}}j}}}{}{}}{{Dfce}{{l{Ehj}}}{}{}}{{DfceHh}{{l{Ehj}}}{}{}}4{cBf{}}{c{{Fl{e}}}{}{}}6{c{{l{e}}}{}{}}0{cIh{}}8```````8888{{{Il{c}}}{{Il{c}}}Dj}{AdAd}{{ce}Eh{}{}}0{{}{{Il{c}}}Fd}{{}Ad}{c{{l{Ad}}}Ff}{{AdAd}Fb}{{AdGf}Gl}{cc{}}0{ce{}{}}000{{{Il{c}}}Fb{}}{cFb{}}0{{}{{Il{c}}}{}}{{Ajc}{{l{Ehj}}}{}}{{{Il{c}}c}{{l{Ehj}}}Af}{{AjCncDh}{{l{Ehj}}}{}}{{{Il{c}}CncDh}{{l{Ehj}}}Af}{{AjcDh}{{l{Ehj}}}{}}{{{Il{c}}cDh}{{l{Ehj}}}Af}{{{Il{c}}eAd}{{Il{c}}}{}{{Aj{c}}}}{{Adc}lId};;{c{{Fl{e}}}{}{}}0<<{c{{l{e}}}{}{}}000{cIh{}}0>>```{{Ince}{{l{gj}}}{}{}{}}{{Inc}{{l{ej}}}{}{}}{ce{}{}}00000{InIn}{J`J`}{JbJb}{{ce}Eh{}{}}005{{J`c}{{l{ej}}}{}{}}{{}In}{{}J`}{{}Jb}{c{{l{In}}}Ff}{c{{l{J`}}}Ff}{c{{l{Jb}}}Ff}{{InIn}Fb}{{J`J`}Fb}{{JbJb}Fb}{{InGf}Gl}{{J`Gf}Gl}{{JbGf}Gl}{cc{}}00{ce{}{}}00{{Inc}{{l{cj}}}{}}?{{Inc}EhIb}{{J`c}EhIb}{{Inc}{{l{ej}}}{}{}}444{cFb{}}001{JbCn}{{}In}{{}J`}{{}Jb}{{Jb{A`{c}}{Dn{{h{H`}}EhEhEhEhH`}}}{{l{{Gb{{Dn{{h{H`}}EhEhEhEhH`}}{Fl{Dh}}}}j}}}{}}{{Inc}lId}{{J`c}lId}{{Jbc}lId}==={c{{Fl{e}}}{}{}}00>>>{c{{l{e}}}{}{}}00000{cIh{}}00{ce{}{}}00```````````````0000{{{Jd{c}}}{{Jd{c}}}Dj}{{{Jf{c}}}{{Jf{c}}}Dj}{{ce}Eh{}{}}0{c{{l{{Jd{e}}}}}FfFh}{c{{l{{Jf{e}}}}}FfFh}{cc{}}066{{{Jd{c}}{A`{e}}{Dn{cEhEhEhEhc}}}{{l{{Gb{{Dn{cEhEhEhEhc}}{Fl{Dh}}}}j}}}n{{C`{}{{b{c}}{An{c}}}}}}{{{Jf{c}}{A`{e}}{Dn{cEhEhEhEhc}}}{{l{{Gb{{Dn{cEhEhEhEhc}}{Fl{Dh}}}}j}}}n{{C`{}{{b{c}}{An{c}}}}}}88{cFb{}}0{{{Jd{c}}}Cnn}{{{Jf{c}}}Cnn}{{cc}{{Jd{c}}}n}{{ccc}{{Jf{c}}}n}65{{{Jd{c}}e}lIfId}{{{Jf{c}}e}lIfId}{{{Jd{c}}cc}{{Jd{c}}}n}{ce{}{}}0{c{{Fl{e}}}{}{}}011{c{{l{e}}}{}{}}000{cIh{}}033```3333{{{Jh{ce}}}{{Jh{ce}}}DjDj}{{{Jj{cegi}}}{{Jj{cegi}}}DjDjDjDj}{{ce}Eh{}{}}0{c{{l{{Jh{eg}}}}}FfFhFh}{c{{l{{Jj{egik}}}}}FfFhFhFhFh}{cc{}}099{{{Jh{ce}}}{{l{cj}}}{}n}{{{Jh{ce}}{A`{i}}{Dn{cEhEhEhge}}}{{l{{Gb{{Dn{cEhEhEhge}}{Fl{Dh}}}}j}}}{}{}{}{{B`{}{{b{c}}{An{c}}}}}}{{{Jj{ckme}}{A`{i}}{Dn{cgEhEhEhe}}}{{l{{Gb{{Dn{cgEhEhEhe}}{Fl{Dh}}}}j}}}{}{}{DjJlJnK`}{{C`{}{{b{c}}{An{e}}}}{Cd{}{{b{c}}{Cb{g}}}}}{Dj{Kb{ce}}{Ah{i{Dn{cgEhEhEhe}}}}}{{Kd{gce}}}}<<{cFb{}}0{{{Jh{ce}}}Cn{}{}{}}{{{Jj{ckme}}}Cn{}{}{DjJlJnK`}{{C`{}{{b{c}}{An{e}}}}{Cd{}{{b{c}}{Cb{g}}}}}{Dj{Kb{ce}}{Ah{i{Dn{cgEhEhEhe}}}}}{{Kd{gce}}}}{c{{Jh{ce}}}{}n}{{ce}{{Jj{gcei}}}{}{}{}n}65{{{Jj{cegi}}Hh}{{Jj{cegi}}}{}{}{}n}{{{Jj{cegi}}i}{{Jj{cegi}}}{}{}{}n}{{{Jh{ce}}g}lIfIfId}{{{Jj{cegi}}k}lIfIfIfIfId}{ce{}{}}0{c{{Fl{e}}}{}{}}011{c{{l{e}}}{}{}}000{cIh{}}033`````33333333{KfKf}{KhKh}{KjKj}{KlKl}{{ce}Eh{}{}}000{{}Kf}{{}Kh}{{}Kj}{{}Kl}{c{{l{Kf}}}Ff}{c{{l{Kh}}}Ff}{c{{l{Kj}}}Ff}{c{{l{Kl}}}Ff}{{KfGf}Gl}{{KhGf}Gl}{{KjGf}Gl}{{KlGf}Gl}{cc{}}000{ce{}{}}0000000{cFb{}}000>=<;{{Kfc}lId}{{Khc}lId}{{Kjc}lId}{{Klc}lId}5555{c{{Fl{e}}}{}{}}0006666{c{{l{e}}}{}{}}0000000{cIh{}}000{{Kdcce}g{}{}{}}{{Kfccg}eJnn{}}{{Khccg}e{JnKnK`}n{}}{{Kjccg}e{JnKnK`}n{}}{{Klccg}e{JnJnKn}n{}}====``===={{{L`{ce}}}{{L`{ce}}}DjDj}{{{Lb{c}}}{{Lb{c}}}Dj}{{ce}Eh{}{}}0{{}{{Lb{c}}}n}{c{{l{{L`{eg}}}}}FfFhFh}{c{{l{{Lb{e}}}}}FfFh}{cc{}}0{ce{}{}}0{{{Lb{c}}{A`{k}}{Dn{eEhiEhgc}}}{{l{{Gb{{Dn{eEhiEhgc}}{Fl{Dh}}}}j}}}n{DjKnJl}{{K`{c}}}{DjLdLfJnJnJn}{{B`{}{{b{e}}{An{g}}}}{Cl{}{{b{e}}{Cj{i}}}}}}11{cFb{}}0{{{L`{Aac}}}Cnn{}{{K`{c}}}{}{}{{B`{}{{b{e}}{An{g}}}}{Cl{}{{b{e}}{Cj{i}}}}}Dj{Dj{Kb{ec}}{Ah{{`{mc}}{Dn{ekEhEhoc}}}}}}{{{Lb{c}}}Cnn}{c{{L`{ce}}}{}n}9{{{L`{Aac}}{A`{m}}{Dn{ekiEhoc}}}{{l{{Gb{{Dn{ekiEhoc}}{Fl{Dh}}}}j}}}n{}{{K`{c}}}{}{}{{B`{}{{b{e}}{An{g}}}}{Cl{}{{b{e}}{Cj{i}}}}}Dj{Dj{Kb{ec}}{Ah{{`{mc}}{Dn{ekEhEhoc}}}}}}5{{{L`{ce}}g}lIfIfId}{{{Lb{c}}e}lIfId}{{{L`{Aac}}{Dn{ekiEhoc}}}Edn{}{{K`{c}}}{}{}{{B`{}{{b{e}}{An{g}}}}{Cl{}{{b{e}}{Cj{i}}}}}Dj{Dj{Kb{ec}}{Ah{{`{mc}}{Dn{ekEhEhoc}}}}}}{{{Lb{c}}{Dn{eEhgEhic}}}Edn{}{}{}}::{c{{Fl{e}}}{}{}}0;;{c{{l{e}}}{}{}}000{cIh{}}0=={{{Lb{c}}c}{{l{{Lb{c}}j}}}n}{{{L`{ce}}e}{{l{{L`{ce}}j}}}{}n}1`??{{{Lh{c}}}{{Lh{c}}}Dj}{{ce}Eh{}{}}{c{{l{{Lh{e}}}}}FfFh}{cc{}}{ce{}{}}{{{Lh{c}}{A`{e}}{Dn{cEhEhEhEhc}}}{{l{{Gb{{Dn{cEhEhEhEhc}}{Fl{Dh}}}}j}}}n{{C`{}{{b{c}}{An{c}}}}}}1{cFb{}}{{{Lh{c}}}Cnn}{{cc}{{l{{Lh{c}}j}}}n}3{{{Lh{c}}e}lIfId}{{{Lh{c}}{Dn{cEhEhEhEhc}}}Edn}6?6>>=6{{{Lh{c}}c}{{l{{Lh{c}}j}}}n}`77{{{Lj{c}}}{{Lj{c}}}Dj};{c{{l{{Lj{e}}}}}FfFh}:997{{{Lj{k}}}Cnn{}Dj{{C`{}{{b{g}}{An{c}}}}{Cd{}{{b{g}}{Cb{e}}}}}{Dj{Kb{ec}}{Ah{i{Dn{geEhEhEhc}}}}}}{c{{Lj{c}}}{}}{{{Lj{k}}{A`{i}}{Dn{geEhEhEhc}}}{{l{{Gb{{Dn{geEhEhEhc}}{Fl{Dh}}}}j}}}n{}Dj{{C`{}{{b{g}}{An{c}}}}{Cd{}{{b{g}}{Cb{e}}}}}{Dj{Kb{ec}}{Ah{i{Dn{geEhEhEhc}}}}}}{{{Lj{c}}e}lIfId}={c{{Fl{e}}}{}{}}>{c{{l{e}}}{}{}}0{cIh{}}{ce{}{}}`00{{{Ll{c}}}{{Ll{c}}}Dj}{{ce}Eh{}{}}{c{{l{{Ll{e}}}}}FfFh}{cc{}}44{cFb{}}{{{Ll{c}}}Cnn}{c{{Ll{c}}}{}}{{{Ll{c}}{A`{i}}{Dn{geEhEhEhc}}}{{l{{Gb{{Dn{geEhEhEhc}}{Fl{Dh}}}}j}}}n{}{DjLn}{{Cd{}{{b{g}}{Cb{e}}}}}}{{{Ll{c}}e}lIfId}9<9;;:9````999999{{{M`{cegi}}}{{M`{cegi}}}DjDjDjDj}{{{Mb{ceg}}}{{Mb{ceg}}}DjDjDj}{{{Md{ceg}}}{{Md{ceg}}}DjDjDj}:::`{{}{{Mb{gce}}}{}{}{}}{{}{{Md{ceg}}}{}{}n}{c{{l{{M`{egik}}}}}FfFhFhFhFh}{c{{l{{Mb{egi}}}}}FfFhFhFh}{c{{l{{Md{egi}}}}}FfFhFhFh}{{{M`{cegi}}{M`{cegi}}}FbFnFnFnFn}{{{M`{cegi}}Gf}GlFjFjFjFj}???{ce{}{}}00{{{M`{gcie}}{A`{k}}{Dn{gcEhEhEhe}}}{{l{{Gb{{Dn{gcEhEhEhe}}{Fl{Dh}}}}j}}}{}{}{}{{Mf{cce}}}{{C`{}{{b{g}}{An{e}}}}{Cd{}{{b{g}}{Cb{c}}}}}}{{{Mb{gce}}{A`{i}}{Dn{gcEhEhEhe}}}{{l{{Gb{{Dn{gcEhEhEhe}}{Fl{Dh}}}}j}}}{}{}{}{{C`{}{{b{g}}{An{e}}}}{Cd{}{{b{g}}{Cb{c}}}}}}{{{Md{gce}}{A`{i}}{Dn{gcEhEhEhe}}}{{l{{Gb{{Dn{gcEhEhEhe}}{Fl{Dh}}}}j}}}{}{}{}{{C`{}{{b{g}}{An{e}}}}{Cd{}{{b{g}}{Cb{c}}}}}}{{Kbc}{{l{Ehj}}}{}}{{{M`{cegi}}i}{{l{Ehj}}}{}{}{}n}{{{Mb{ceg}}g}{{l{Ehj}}}{}{}{}}{{{Md{ceg}}g}{{l{Ehj}}}{}{}n}777{cFb{}}00{{{M`{gcie}}}Cn{}{}{}{{Mf{cce}}}}{{{Mb{gce}}}Cn{}{}{}}{{{Md{gce}}}Cn{}{}{}}{c{{M`{egci}}}{}{}{}n}{{}{{Mb{gce}}}{}{}{}}{{}{{Md{ceg}}}{}{}n}=<;{{{M`{cegi}}i}{{l{{M`{cegi}}j}}}{}{}{}n}{{Kbc}Eh{}}{{{M`{cegi}}e}Eh{}{}{}n}{{{Mb{ceg}}e}Eh{}{}{}}{{{Md{ceg}}e}Eh{}{}n}{{{M`{cegi}}k}lIfIfIfIfId}{{{Mb{ceg}}i}lIfIfIfId}{{{Md{ceg}}i}lIfIfIfId}{{{M`{gcie}}{Dn{gcEhEhEhe}}}Ed{}{}{}{{Mf{cce}}}}{{{Mb{gce}}{Dn{gcEhEhEhe}}}Ed{}{}{}}{ce{}{}}00{c{{Fl{e}}}{}{}}00111{c{{l{e}}}{}{}}00000{cIh{}}00333{{{Mb{gce}}ee}{{l{{Mb{gce}}j}}}{}{}{}}{{{Md{ceg}}gg}{{l{{Md{ceg}}j}}}{}{}n}01{{{Mb{gce}}e}{{l{{Mb{gce}}j}}}{}{}{}}000{{{Md{ceg}}g}{{l{{Md{ceg}}j}}}{}{}n}`````77777777{{{Mh{c}}}{{Mh{c}}}Dj}{{{Mj{c}}}{{Mj{c}}}Dj}{{{Ml{c}}}{{Ml{c}}}Dj}{{{Mn{c}}}{{Mn{c}}}Dj}{{ce}Eh{}{}}000{{}{{Mh{c}}}Fd}{{}{{Mj{c}}}Fd}{{}{{Ml{c}}}Fd}{{}{{Mn{c}}}Fd}{c{{l{{Mh{e}}}}}FfFh}{c{{l{{Mj{e}}}}}FfFh}{c{{l{{Ml{e}}}}}FfFh}{c{{l{{Mn{e}}}}}FfFh}{{{Mh{c}}{Mh{c}}}FbFn}{{{Mj{c}}{Mj{c}}}FbFn}{{{Ml{c}}{Ml{c}}}FbFn}{{{Mn{c}}{Mn{c}}}FbFn}{{Mfc{Fl{e}}cegc}Fb{}{}{}}{{{Mh{c}}c{Fl{g}}cgec}Fbn{}{{Jn{ec}}}}{{{Mj{c}}c{Fl{g}}cgec}Fbn{}{{Jn{ec}}}}{{{Ml{c}}c{Fl{g}}cgec}Fbn{}{{Jn{ec}}}}{{{Mn{c}}c{Fl{g}}cgec}Fbn{}{{Jn{ec}}}}{{{Mh{c}}Gf}GlFj}{{{Mj{c}}Gf}GlFj}{{{Ml{c}}Gf}GlFj}{{{Mn{c}}Gf}GlFj}{cc{}}000{ce{}{}}0000000{cFb{}}000{c{{l{{Mh{c}}j}}}n}{c{{l{{Mj{c}}j}}}n}{{cc}{{l{{Ml{c}}j}}}n}{{cc}{{l{{Mn{c}}j}}}n}{MfFb}{{{Mh{c}}}Fbn}{{{Mj{c}}}Fbn}{{{Ml{c}}}Fbn}{{{Mn{c}}}Fbn}{{{Mh{c}}e}lIfId}{{{Mj{c}}e}lIfId}{{{Ml{c}}e}lIfId}{{{Mn{c}}e}lIfId}>>>>{c{{Fl{e}}}{}{}}000????{c{{l{e}}}{}{}}0000000{cIh{}}000{ce{}{}}000`00{{{N`{ce}}}{{N`{ce}}}DjDj}{{ce}Eh{}{}}{c{{l{{N`{eg}}}}}FfFhFh}{cc{}}4{{{N`{ce}}{A`{g}}{Dn{cEhEhEhEhe}}}{{l{{Gb{{Dn{cEhEhEhEhe}}{Fl{Dh}}}}j}}}{}{}{{C`{}{{b{c}}{An{e}}}}}}5{cFb{}}{{{N`{ce}}}Cn{}{}}{{{h{c}}}{{N`{ce}}}{}{}}3{{{N`{ce}}g}lIfIfId}{{{N`{ce}}{Dn{cEhEhEhEhe}}}Ed{}{}}:=:<<;:{{{N`{ce}}e}{{l{{N`{ce}}j}}}{}{}}0000``;;;;{{{Nb{ce}}}{{Nb{ce}}}DjDj}{{{Nd{c}}}{{Nd{c}}}Dj};;{{}{{Nd{c}}}n}{c{{l{{Nb{eg}}}}}FfFhFh}{c{{l{{Nd{e}}}}}FfFh}<<{ce{}{}}000;;{{{Nb{me}}}Cn{}{}{{K`{e}}{Jl{ec}}}{Dj{Jn{cc}}}{{Cd{}{{b{c}}{Cb{g}}}}{Ch{}{{b{c}}{Cf{i}}}}}{Dj{Kb{ce}}{Ah{k{Dn{cgEhEhEhe}}}}}}{{{Nd{c}}}Cnn}{c{{Nb{ce}}}{}n}6{{{Nb{me}}{A`{k}}{Dn{cgEhiEhe}}}{{l{{Gb{{Dn{cgEhiEhe}}{Fl{Dh}}}}j}}}{}{}{{K`{e}}{Jl{ec}}}{Dj{Jn{cc}}}{{Cd{}{{b{c}}{Cb{g}}}}{Ch{}{{b{c}}{Cf{i}}}}}{Dj{Kb{ce}}{Ah{k{Dn{cgEhEhEhe}}}}}}{{{Nd{c}}{A`{k}}{Dn{egEhiEhc}}}{{l{{Gb{{Dn{egEhiEhc}}{Fl{Dh}}}}j}}}n{DjLn}{}{LfJn}{{Cd{}{{b{e}}{Cb{g}}}}{Ch{}{{b{e}}{Cf{i}}}}}}{{{Nb{ce}}g}lIfIfId}{{{Nd{c}}e}lIfId}{{{Nb{me}}{Dn{cgEhiEhe}}}Ed{}{}{{K`{e}}{Jl{ec}}}{Dj{Jn{cc}}}{{Cd{}{{b{c}}{Cb{g}}}}{Ch{}{{b{c}}{Cf{i}}}}}{Dj{Kb{ce}}{Ah{k{Dn{cgEhEhEhe}}}}}}88{c{{Fl{e}}}{}{}}099{c{{l{e}}}{}{}}000{cIh{}}0;;{{{Nb{ce}}e}{{Nb{ce}}}{}n}{{{Nd{c}}c}{{l{{Nd{c}}j}}}n}{{{Nb{ce}}e}{{l{{Nb{ce}}j}}}{}n}``>>>>{{{Nf{ceg}}}{{Nf{ceg}}}DjDjDj}{{{Nh{ce}}}{{Nh{ce}}}DjDj}{{ce}Eh{}{}}0`{c{{l{{Nf{egi}}}}}FfFhFhFh}{c{{l{{Nh{eg}}}}}FfFhFh}{{{Nh{ce}}{Nh{ce}}}FbFnFn}{{{Nh{ce}}Gf}GlFjFj}{cc{}}0{ce{}{}}0{{{Nf{ceg}}{A`{i}}{Eb{{Nh{ce}}e}}}{{l{{Gb{{Eb{{Nh{ce}}e}}{Fl{Dh}}}}j}}}{}{}Nj{{C`{}{{b{c}}{An{e}}}}Bn}}11{cFb{}}0{{{Nf{ceg}}}Cn{}{}Nj}{{{Gb{cc}}D`}{{Nf{ceNl}}}{}{}}{{cec}{{Nh{ce}}}Djn}4`{{{Nf{ceg}}i}lIfIfIfId}{{{Nh{ce}}g}lIfIfId}77{c{{Fl{e}}}{}{}}088{c{{l{e}}}{}{}}000{cIh{}}0::{{{Nf{ceg}}e}{{l{{Nf{ceg}}j}}}{}{}Nj}0{{{Nf{ceg}}i}{{Nf{cei}}}{}{}NjNj}1`````<<<<<<<<<<{{{Nn{ce}}}{{Nn{ce}}}DjDj}{{{O`{ce}}}{{O`{ce}}}DjDj}{{{Ob{cegi}}}{{Ob{cegi}}}DjDjDjDj}{{{Od{ce}}}{{Od{ce}}}DjDj}{{{Of{ce}}}{{Of{ce}}}DjDj}{{ce}Eh{}{}}0000{c{{l{{Nn{eg}}}}}FfFhFh}{c{{l{{O`{eg}}}}}FfFhFh}{c{{l{{Ob{egik}}}}}FfFhFhFhFh}{c{{l{{Od{eg}}}}}FfFhFh}{c{{l{{Of{eg}}}}}FfFhFh}{cc{}}0000{ce{}{}}0000{{{Nn{mi}}{A`{k}}{Dn{ceEhgEhi}}}{{l{{Gb{{Dn{ceEhgEhi}}{Fl{Dh}}}}j}}}{}{}{}{}{{C`{}{{b{c}}{An{i}}}}{Cd{}{{b{c}}{Cb{e}}}}}{Dj{Kb{ci}}{Ah{k{Dn{ceEhEhEhi}}}}}}{{{O`{mg}}{A`{k}}{Dn{ceEhiEhg}}}{{l{{Gb{{Dn{ceEhiEhg}}{Fl{Dh}}}}j}}}{}{}{}{}{{C`{}{{b{c}}{An{g}}}}{Cd{}{{b{c}}{Cb{e}}}}}{Dj{Kb{cg}}{Ah{k{Dn{ceEhEhEhg}}}}}}{{{Ob{kcge}}{A`{i}}{Dn{cgEhEhEhe}}}{{l{{Gb{{Dn{cgEhEhEhe}}{Fl{Dh}}}}j}}}{}{}{}{{C`{}{{b{c}}{An{e}}}}{Cd{}{{b{c}}{Cb{g}}}}}{Dj{Kb{ce}}{Ah{{`{icge}}{Dn{cgEhEhEhe}}}}}}{{{Od{mg}}{A`{k}}{Dn{ceEhiEhg}}}{{l{{Gb{{Dn{ceEhiEhg}}{Fl{Dh}}}}j}}}{}{}{}{}{{C`{}{{b{c}}{An{g}}}}{Cd{}{{b{c}}{Cb{e}}}}}{Dj{Kb{cg}}{Ah{k{Dn{ceEhEhEhg}}}}}}{{{Of{mc}}{A`{k}}{Dn{eiEhgEhc}}}{{l{{Gb{{Dn{eiEhgEhc}}{Fl{Dh}}}}j}}}{}{DjKnOhJnJnK`Oj}{DjJnOhJl}{DjK`JnKn}{{C`{}{{b{e}}{An{c}}}}{Cd{}{{b{e}}{Cb{i}}}}{Ch{}{{b{e}}{Cf{g}}}}}{Dj{Ol{c}}{Ah{k{Dn{eiEhgEhc}}}}}}55555{cFb{}}0000{{{Nn{mi}}}Cn{}{}{}{}{{C`{}{{b{c}}{An{i}}}}{Cd{}{{b{c}}{Cb{e}}}}}{Dj{Kb{ci}}{Ah{k{Dn{ceEhEhEhi}}}}}}{{{O`{mg}}}Cn{}{}{}{}{{C`{}{{b{c}}{An{g}}}}{Cd{}{{b{c}}{Cb{e}}}}}{Dj{Kb{cg}}{Ah{k{Dn{ceEhEhEhg}}}}}}{{{Ob{kcge}}}Cn{}{}{}{{C`{}{{b{c}}{An{e}}}}{Cd{}{{b{c}}{Cb{g}}}}}{Dj{Kb{ce}}{Ah{{`{icge}}{Dn{cgEhEhEhe}}}}}}{{{Od{mg}}}Cn{}{}{}{}{{C`{}{{b{c}}{An{g}}}}{Cd{}{{b{c}}{Cb{e}}}}}{Dj{Kb{cg}}{Ah{k{Dn{ceEhEhEhg}}}}}}{{{Of{mc}}}Cn{}{DjKnOhJnJnK`Oj}{DjJnOhJl}{DjK`JnKn}{{C`{}{{b{e}}{An{c}}}}{Cd{}{{b{e}}{Cb{i}}}}{Ch{}{{b{e}}{Cf{g}}}}}{Dj{Ol{c}}{Ah{k{Dn{eiEhgEhc}}}}}}{c{{Nn{ce}}}{}n}{c{{O`{ce}}}{}n}{{cD`}{{Ob{cegi}}}{}{}{}n}{c{{Od{ce}}}{}n}{c{{Of{ce}}}{}n}?>=<;{{{Nn{ce}}g}lIfIfId}{{{O`{ce}}g}lIfIfId}{{{Ob{cegi}}k}lIfIfIfIfId}{{{Od{ce}}g}lIfIfId}{{{Of{ce}}g}lIfIfId}{{{Nn{mi}}{Dn{ceEhgEhi}}}Ed{}{}{}{}{{C`{}{{b{c}}{An{i}}}}{Cd{}{{b{c}}{Cb{e}}}}}{Dj{Kb{ci}}{Ah{k{Dn{ceEhEhEhi}}}}}}{{{O`{mg}}{Dn{ceEhiEhg}}}Ed{}{}{}{}{{C`{}{{b{c}}{An{g}}}}{Cd{}{{b{c}}{Cb{e}}}}}{Dj{Kb{cg}}{Ah{k{Dn{ceEhEhEhg}}}}}}{{{Ob{kcge}}{Dn{cgEhEhEhe}}}Ed{}{}{}{{C`{}{{b{c}}{An{e}}}}{Cd{}{{b{c}}{Cb{g}}}}}{Dj{Kb{ce}}{Ah{{`{icge}}{Dn{cgEhEhEhe}}}}}}{{{Od{mg}}{Dn{ceEhiEhg}}}Ed{}{}{}{}{{C`{}{{b{c}}{An{g}}}}{Cd{}{{b{c}}{Cb{e}}}}}{Dj{Kb{cg}}{Ah{k{Dn{ceEhEhEhg}}}}}}{{{Of{mc}}{Dn{eiEhgEhc}}}Ed{}{DjKnOhJnJnK`Oj}{DjJnOhJl}{DjK`JnKn}{{C`{}{{b{e}}{An{c}}}}{Cd{}{{b{e}}{Cb{i}}}}{Ch{}{{b{e}}{Cf{g}}}}}{Dj{Ol{c}}{Ah{k{Dn{eiEhgEhc}}}}}}{ce{}{}}0000{c{{Fl{e}}}{}{}}000011111{c{{l{e}}}{}{}}000000000{cIh{}}000033333{{{Od{ce}}e}{{l{{Od{ce}}j}}}{}n}{{{Of{ce}}e}{{l{{Of{ce}}j}}}{}n}0{{{Ob{cegi}}i}{{l{{Ob{cegi}}j}}}{}{}{}n}{{{Of{ce}}e}{{Of{ce}}}{}n}{{{Nn{ce}}e}{{l{{Nn{ce}}j}}}{}n}240{{{O`{ce}}e}{{l{{O`{ce}}j}}}{}n}354`````````{{{Al{}{{b{c}}{An{e}}{d{g}}}}cg}{{l{ej}}}{}{}{}}::::{{{On{c}}}{{On{c}}}Dj}{{{A@`{ce}}}{{A@`{ce}}}DjDj}{{ce}Eh{}{}}0{{}{{On{c}}}{}}{c{{l{{On{e}}}}}FfFh}{c{{l{{A@`{eg}}}}}FfFhFh}{{{On{c}}{On{c}}}FbFn}{{{On{c}}Gf}GlFj}{cc{}}0{ce{}{}}0{{{A@`{ce}}{A`{i}}{Dn{gEhEhEhEhc}}}{{l{{Gb{{Dn{gEhEhEhEhc}}{Fl{Dh}}}}j}}}nNjDj{{C`{}{{b{g}}{An{c}}}}{Al{}{{b{g}}{An{g}}{d{c}}}}}}11{cFb{}}0{{{A@`{ce}}}CnnNj}{c{{l{{A@`{cA@b}}j}}}n}{{ce}{{l{{A@`{ce}}j}}}n{}}4{{{On{c}}e}lIfId}{{{A@`{ce}}g}lIfIfId}{{{A@`{ce}}{Dn{gEhEhEhEhc}}}EdnNjDj}88{c{{Fl{e}}}{}{}}099{c{{l{e}}}{}{}}000{cIh{}}0;;{{{A@`{ce}}Hh}{{A@`{ce}}}n{}}0000{{{A@`{ce}}{On{c}}}{{A@`{ce}}}n{}}`````========{{{A@d{c}}}{{A@d{c}}}Dj}{{{A@f{c}}}{{A@f{c}}}Dj}{{{A@h{ce}}}{{A@h{ce}}}DjDj}{{{A@j{ce}}}{{A@j{ce}}}DjDj}{{ce}Eh{}{}}000{{}{{A@d{c}}}Fd}{{}{{A@f{c}}}Fd}{{}{{A@h{ce}}}FdFd}{c{{l{{A@d{e}}}}}FfFh}{c{{l{{A@f{e}}}}}FfFh}{c{{l{{A@h{eg}}}}}FfFhFh}{c{{l{{A@j{eg}}}}}FfFhFh}{{{A@d{c}}{A@d{c}}}FbFn}{{{A@f{c}}{A@f{c}}}FbFn}{{{A@d{c}}Gf}GlFj}{{{A@f{c}}Gf}GlFj}{cc{}}000{ce{}{}}000{{{A@h{ec}}{A`{g}}{Dn{eeEhiEhc}}}{{l{{Gb{{Dn{eeEhiEhc}}{Fl{Dh}}}}j}}}n{}{}{{Jn{ee}}}}{{{A@j{mc}}{A`{k}}{Dn{egEhiEhc}}}{{l{{Gb{{Dn{egEhiEhc}}{Fl{Dh}}}}j}}}n{DjK`JnJnOh}Dj{Dj{Jn{ee}}}{{C`{}{{b{e}}{An{c}}}}{Cd{}{{b{e}}{Cb{g}}}}{Ch{}{{b{e}}{Cf{i}}}}}{Dj{Ol{c}}{Ah{k{Dn{egEhiEhc}}}}}}2222{cFb{}}000{{{A@d{c}}}Cnn}{{{A@f{c}}}Cnn}{{{A@h{ec}}}Cnn{}}{{{A@j{mc}}}Cnn{DjK`JnJnOh}Dj{Dj{Jn{ee}}}{{C`{}{{b{e}}{An{c}}}}{Cd{}{{b{e}}{Cb{g}}}}{Ch{}{{b{e}}{Cf{i}}}}}{Dj{Ol{c}}{Ah{k{Dn{egEhiEhc}}}}}}{{}{{A@d{c}}}n}{{}{{A@f{c}}}n}{{}{{A@h{ec}}}n{}}{c{{A@j{ce}}}{}n}{{{A@d{c}}{A`{k}}{Dn{eiEhgEhc}}}{{l{{Gb{{Dn{eiEhgEhc}}{Fl{Dh}}}}j}}}n{DjJlA@l}{}{JlA@lK`}{{Cd{}{{b{e}}{Cb{i}}}}{Ch{}{{b{e}}{Cf{g}}}}}}{{{A@f{c}}{A`{i}}{Dn{eeEhgEhc}}}{{l{{Gb{{Dn{eeEhgEhc}}{Fl{Dh}}}}j}}}n{DjJlK`JnOhKn}{LfJn}{{Cd{}{{b{e}}{Cb{e}}}}{Ch{}{{b{e}}{Cf{g}}}}}}<;{{{A@d{c}}{A@d{c}}}{{Fl{Ej}}}A@n}{{{A@f{c}}{A@f{c}}}{{Fl{Ej}}}A@n}{{cccc}cn}{{{A@d{c}}e}lIfId}{{{A@f{c}}e}lIfId}{{{A@h{ce}}g}lIfIfId}{{{A@j{ce}}g}lIfIfId}{{Olc}Eh{}}{{{A@d{c}}c}Ehn}{{{A@f{c}}c}Ehn}{{{A@h{ce}}e}Eh{}n}{{{A@d{c}}{Dn{eiEhgEhc}}}Edn{}{}{}}{{{A@f{c}}{Dn{eeEhgEhc}}}Edn{}{}}{{{A@h{ec}}{Dn{eeEhgEhc}}}Edn{}{{Jn{ee}}}}{{{A@j{mc}}{Dn{egEhiEhc}}}Edn{DjK`JnJnOh}Dj{Dj{Jn{ee}}}{{C`{}{{b{e}}{An{c}}}}{Cd{}{{b{e}}{Cb{g}}}}{Ch{}{{b{e}}{Cf{i}}}}}{Dj{Ol{c}}{Ah{k{Dn{egEhiEhc}}}}}}{ce{}{}}000{c{{Fl{e}}}{}{}}0001111{c{{l{e}}}{}{}}0000000{cIh{}}0003333{{{A@h{ec}}c}{{l{{A@h{ec}}j}}}n{}}{{{A@j{ce}}e}{{l{{A@j{ce}}j}}}{}n}{{{A@h{ec}}Hh}{{A@h{ec}}}n{}}11","D":"EHn","p":[[17,"Param"],[17,"Float"],[10,"LinearProgram",8,1711],[5,"Vec",1712],[5,"Error",8,1713],[6,"Result",1714],[10,"ArgminFloat",8,1715],[5,"Problem",8,1711],[5,"Executor",8,1716],[6,"ObserverMode",658],[10,"State",8,1717],[10,"Solver",8,1718],[10,"Observe",658],[10,"Anneal",1542],[17,"Output"],[10,"Operator",8,1711],[10,"Error",1719],[6,"KvValue",8,1720],[5,"String",1721],[5,"Backtrace",1722],[1,"slice"],[10,"Borrow",1723],[10,"SyncAlias",8,1724],[10,"CostFunction",8,1711],[17,"Gradient"],[10,"Gradient",8,1711],[17,"Hessian"],[10,"Hessian",8,1711],[17,"Jacobian"],[10,"Jacobian",8,1711],[1,"str"],[1,"usize"],[10,"FnOnce",1725],[5,"Chain",1713],[10,"Checkpoint",628],[5,"KV",8,1720],[10,"Clone",1726],[5,"OptimizationResult",8,1727],[5,"IterState",8,1728],[5,"LinearProgramState",8,1729],[5,"PopulationState",8,1730],[6,"TerminationStatus",8,1731],[6,"TerminationReason",8,1731],[1,"unit"],[6,"Ordering",1732],[10,"Display",1733],[10,"Send",1734],[10,"Sync",1734],[1,"bool"],[10,"Default",1735],[10,"Deserializer",1736],[10,"Deserialize",1736],[10,"Debug",1733],[6,"Option",1737],[10,"PartialEq",1732],[17,"Item"],[1,"tuple"],[10,"IntoIterator",1738],[5,"Formatter",1733],[5,"Error",1733],[6,"ArgminError",8,1739],[8,"Result",1733],[1,"never"],[1,"f64"],[1,"u32"],[1,"i64"],[1,"i32"],[1,"u64"],[1,"f32"],[10,"AsRef",1740],[5,"HashMap",1741],[5,"Duration",1742],[10,"Hasher",1743],[10,"Serializer",1744],[10,"Serialize",1744],[5,"TypeId",1745],[6,"CheckpointingFrequency",628],[5,"Observers",658],[5,"TestProblem",710],[5,"TestSparseProblem",710],[5,"TestSolver",710],[5,"BrentOpt",801,1746],[5,"BrentRoot",801,1747],[5,"ConjugateGradient",846,1748],[5,"NonlinearConjugateGradient",846,1749],[10,"ArgminMul",1750],[10,"ArgminDot",1750],[10,"ArgminL2Norm",1750],[10,"LineSearch",1099],[10,"NLCGBetaUpdate",894],[5,"FletcherReeves",894],[5,"PolakRibiere",894],[5,"PolakRibierePlus",894],[5,"HestenesStiefel",894],[10,"ArgminSub",1750],[5,"GaussNewtonLS",984,1751],[5,"GaussNewton",984,1752],[10,"ArgminTranspose",1750],[10,"ArgminInv",1750],[5,"GoldenSectionSearch",1033],[5,"SteepestDescent",1057,1753],[5,"Landweber",1078],[10,"ArgminScaledSub",1750],[5,"BacktrackingLineSearch",1099,1754],[5,"HagerZhangLineSearch",1099,1755],[5,"MoreThuenteLineSearch",1099,1756],[10,"LineSearchCondition",1191],[5,"ArmijoCondition",1191,1757],[5,"GoldsteinCondition",1191,1758],[5,"StrongWolfeCondition",1191,1759],[5,"WolfeCondition",1191,1760],[5,"NelderMead",1290],[5,"NewtonCG",1318,1761],[5,"Newton",1318,1762],[5,"ParticleSwarm",1365],[5,"Particle",1365],[10,"Rng",1763],[5,"StdRng",1764],[5,"BFGS",1414,1765],[5,"DFP",1414,1766],[5,"LBFGS",1414,1767],[5,"SR1",1414,1768],[5,"SR1TrustRegion",1414,1769],[10,"ArgminAdd",1750],[10,"ArgminZeroLike",1750],[10,"TrustRegionRadius",1601],[6,"SATempFunc",1542],[5,"SimulatedAnnealing",1542],[5,"Xoshiro256PlusPlus",1770],[5,"CauchyPoint",1601,1771],[5,"Dogleg",1601,1772],[5,"Steihaug",1601,1773],[5,"TrustRegion",1601,1774],[10,"ArgminWeightedDot",1750],[10,"PartialOrd",1732],[15,"InvalidParameter",621],[15,"NotImplemented",621],[15,"NotInitialized",621],[15,"ConditionViolated",621],[15,"CheckpointNotFound",621],[15,"PotentialBug",621],[15,"ImpossibleError",621]],"r":[[11,1739],[12,1715],[16,1711],[17,1713],[18,1716],[22,1711],[24,1711],[30,1728],[31,1711],[33,1720],[34,1720],[35,1099],[36,1711],[37,1729],[39,894],[43,1711],[44,1727],[54,1730],[56,1711],[57,1724],[58,1718],[61,1717],[63,1724],[66,1731],[67,1731],[69,1601],[801,1746],[802,1747],[846,1748],[847,1749],[984,1752],[985,1751],[1057,1753],[1099,1754],[1100,1755],[1102,1756],[1191,1757],[1192,1758],[1194,1759],[1195,1760],[1318,1762],[1319,1761],[1414,1765],[1415,1766],[1416,1767],[1417,1768],[1418,1769],[1601,1771],[1602,1772],[1603,1773],[1604,1774]],"b":[[75,"impl-AsRef%3Cdyn+Error%3E-for-Error"],[76,"impl-AsRef%3Cdyn+Error+%2B+Send+%2B+Sync%3E-for-Error"],[203,"impl-Display-for-Error"],[204,"impl-Debug-for-Error"],[205,"impl-Display-for-ArgminError"],[206,"impl-Debug-for-ArgminError"],[207,"impl-Debug-for-KvValue"],[208,"impl-Display-for-KvValue"],[209,"impl-Debug-for-KV"],[210,"impl-Display-for-KV"],[216,"impl-Debug-for-TerminationStatus"],[217,"impl-Display-for-TerminationStatus"],[218,"impl-Debug-for-TerminationReason"],[219,"impl-Display-for-TerminationReason"],[225,"impl-From%3Cf64%3E-for-KvValue"],[227,"impl-From%3CString%3E-for-KvValue"],[228,"impl-From%3Cu32%3E-for-KvValue"],[229,"impl-From%3Ci64%3E-for-KvValue"],[230,"impl-From%3Ci32%3E-for-KvValue"],[231,"impl-From%3C%26str%3E-for-KvValue"],[232,"impl-From%3Cbool%3E-for-KvValue"],[233,"impl-From%3Cu64%3E-for-KvValue"],[234,"impl-From%3Cf32%3E-for-KvValue"],[262,"impl-State-for-IterState%3CP,+G,+J,+H,+R,+F%3E"],[263,"impl-IterState%3CP,+G,+J,+H,+R,+F%3E"],[265,"impl-State-for-PopulationState%3CP,+F%3E"],[266,"impl-PopulationState%3CP,+F%3E"],[273,"impl-IterState%3CP,+G,+J,+H,+R,+F%3E"],[274,"impl-State-for-IterState%3CP,+G,+J,+H,+R,+F%3E"],[276,"impl-State-for-PopulationState%3CP,+F%3E"],[277,"impl-PopulationState%3CP,+F%3E"],[322,"impl-IterState%3CP,+G,+J,+H,+R,+F%3E"],[323,"impl-State-for-IterState%3CP,+G,+J,+H,+R,+F%3E"],[325,"impl-State-for-PopulationState%3CP,+F%3E"],[326,"impl-PopulationState%3CP,+F%3E"],[639,"impl-Display-for-CheckpointingFrequency"],[640,"impl-Debug-for-CheckpointingFrequency"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAOgDaAAkAAAAKAAAAEYAAABMAAEAWQAXAIcAEQCxAA4AwwACAMcAFQDeAAEA4gAAAOQABwD0AAwAWQEBAHsBCwDUAQYAEgJLAGICCwB6AgcAhAIBAIcCAACLAgcAmgIIAKQCAgCpAgEArgIBALgCDgDMAgsA2gILAOkCAgDuAgEA9AICAPgCAAD8AhgAJAMJADADAwA2AwMAPAMDAEEDDQBSAwkAXgMBAGEDAQBlAwMAbAMAAG8DDwCEAxsApAMDAKwDAwC0AxsA1QMDANsDCgDoAwIA7QMDAPMDEwALBAQAEQQBABQEAQAXBAkAIwQEACkEAAArBAEALgQIADgEBAA+BAAAQAQBAEMECABQBAsAXQQGAGcEBQB0BAUAfQQCAIUEGQCtBBsAygQHANYEAwDeBAMA5wQjAAwFBAASBQEAFQUBABgFCQApBQoANgUBADoFAwBABRIAWAUHAGEFAwBnBQIAbAUCAHMFDwCMBRgAqgUJALkFCQDIBTEAEQYMACAGAgAlBgIAKwYQAEcGGgBmBgUAcAYHAHwGBQCDBgMAiwYfAA=="}],\
["argmin_checkpointing_file",{"t":"PKGPFPNNNNNNNNNNONNONNNMNONNNNNNNNNNMNNMNNNNNNNNNNNNNNNNN","n":["Always","Checkpoint","CheckpointingFrequency","Every","FileCheckpoint","Never","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","directory","eq","eq","filename","fmt","fmt","fmt","frequency","frequency","frequency","from","from","from_subset","from_subset","hash","hash","into","into","is_in_subset","is_in_subset","load","load","new","save","save","save_cond","to_owned","to_owned","to_string","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"argmin_checkpointing_file"],[57,"argmin::core::checkpointing"],[58,"core::fmt"],[59,"core::result"],[60,"core::hash"],[61,"core::option"],[62,"anyhow"],[63,"serde::ser"],[64,"serde::de"],[65,"core::convert"],[66,"alloc::string"],[67,"core::any"]],"i":[2,0,0,2,0,2,1,2,1,2,1,2,1,2,1,2,1,1,2,1,1,2,2,9,1,1,1,2,1,2,1,2,1,2,1,2,9,1,1,9,1,9,1,2,2,1,2,1,2,1,2,1,2,1,2,1,2],"f":"``````{ce{}{}}000{bb}{dd}{{ce}f{}{}}0{{}b}{{}d}`{{bb}h}{{dd}h}`{{bj}l}{{dj}{{A`{fn}}}}0{Abd}{bd}`{cc{}}0<<{{bc}fAd}{{dc}fAd}>>{ch{}}0{Ab{{A`{{Ah{{Af{ce}}}}Aj}}}{}{}}{b{{A`{{Ah{{Af{ce}}}}Aj}}}{AlAn}{AlAn}}{{ccd}b{{Bb{B`}}}}{{Abce}{{A`{fAj}}}{}{}}{{bce}{{A`{fAj}}}{AlAn}{AlAn}}{{AbceBd}{{A`{fAj}}}{}{}}{ce{}{}}0{cBf{}}{c{{Ah{e}}}{}{}}022{c{{A`{e}}}{}{}}000{cBh{}}044","D":"Bn","p":[[5,"FileCheckpoint",0],[6,"CheckpointingFrequency",0,57],[1,"unit"],[1,"bool"],[5,"Formatter",58],[8,"Result",58],[5,"Error",58],[6,"Result",59],[10,"Checkpoint",0,57],[10,"Hasher",60],[1,"tuple"],[6,"Option",61],[5,"Error",62],[10,"Serialize",63],[10,"DeserializeOwned",64],[1,"str"],[10,"AsRef",65],[1,"u64"],[5,"String",66],[5,"TypeId",67]],"r":[[1,57],[2,57]],"b":[[21,"impl-Display-for-CheckpointingFrequency"],[22,"impl-Debug-for-CheckpointingFrequency"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACIABwAHAAcAEAAAABIAAQAVAAIAHQADACMAAQArAA4A"}],\
["argmin_math",{"t":"KKKKKKKKKKKKKKKKKKKFKMNNNNNNMNNNMMNNNNMMNNNNNNNNNNNNMNNMMMMNMNMNNNMMMMMNNNNNNNNMMM","n":["ArgminAdd","ArgminConj","ArgminDiv","ArgminDot","ArgminEye","ArgminInv","ArgminL1Norm","ArgminL2Norm","ArgminMinMax","ArgminMul","ArgminRandom","ArgminScaledAdd","ArgminScaledSub","ArgminSignum","ArgminSub","ArgminTranspose","ArgminWeightedDot","ArgminZero","ArgminZeroLike","Error","Rng","add","as_ref","as_ref","backtrace","borrow","borrow_mut","chain","conj","context","deref","deref_mut","div","dot","downcast","downcast_mut","downcast_ref","drop","eye","eye_like","fill","fmt","fmt","from","from","from","from_subset","gen","gen_bool","gen_range","gen_ratio","into","inv","is","is_in_subset","l1_norm","l2_norm","max","min","msg","mul","new","rand_from_range","root_cause","sample","sample_iter","scaled_add","scaled_sub","signum","sub","t","to_string","to_subset","to_subset_unchecked","try_fill","try_from","try_into","type_id","vzip","weighted_dot","zero","zero_like"],"q":[[0,"argmin_math"],[82,"anyhow"],[83,"core::error"],[84,"std::backtrace"],[85,"core::fmt"],[86,"core::marker"],[87,"core::result"],[88,"core::option"],[89,"rand::rng"],[90,"rand::distributions::uniform"],[91,"rand::distributions::distribution"],[92,"alloc::string"],[93,"rand_core::error"],[94,"core::any"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,2,2,6,2,2,2,10,11,2,2,2,2,17,17,18,2,2,2,2,2,2,18,18,18,18,2,29,2,2,30,31,32,32,2,33,2,34,2,18,18,37,38,39,40,41,2,2,2,18,2,2,2,2,45,46,47],"f":"`````````````````````{{bc}e{}{}}{df}0{dh}{ce{}{}}0{dj}{ll}{{dc}d{nA`Ab}}{d}0{{Adc}e{}{}}{{Afc}e{}{}}{d{{Ah{cd}}}{nAjA`Ab}}{d{{Al{c}}}{nAjA`Ab}}0{dAn}{B`Bb}{BbBb}{{Bdc}An{BfBh}}{{dBj}{{Ah{AnBl}}}}0{cd{fA`Ab}}{cc{}}{Bnc{}}{ce{}{}}{Bdc{}}{{BdC`}Cb}{{Bde}cCd{{Cf{c}}}}{{BdChCh}Cb}4{Cj{{Ah{cd}}}{}}{dCb}{cCb{}}{Clc{}}{Cnc{}}{{D`D`}D`}0{cd{nAjA`Ab}}{{Dbc}e{}{}}?{{DdDdc}DdBd}{df}{{Bde}c{}{{Df{c}}}}{{Bde}{{Dh{eBdc}}}{}{{Df{c}}}}{{Djce}g{}{}{}}{{Dlce}g{}{}{}}{DnDn}{{E`c}e{}{}}{Ebc{}}{cEd{}}{c{{Al{e}}}{}{}}{ce{}{}}{{Bdc}{{Ah{AnEf}}}{BfBh}}{c{{Ah{e}}}{}{}}0{cEh{}}3{{Ejce}g{}{}{}}{{}El}{EnEn}","D":"Gn","p":[[10,"ArgminAdd",0],[5,"Error",0,82],[10,"Error",83],[5,"Backtrace",84],[5,"Chain",82],[10,"ArgminConj",0],[10,"Display",85],[10,"Send",86],[10,"Sync",86],[10,"ArgminDiv",0],[10,"ArgminDot",0],[6,"Result",87],[10,"Debug",85],[6,"Option",88],[1,"unit"],[1,"usize"],[10,"ArgminEye",0],[10,"Rng",0,89],[10,"Fill",89],[10,"Sized",86],[5,"Formatter",85],[5,"Error",85],[1,"never"],[1,"f64"],[1,"bool"],[10,"SampleUniform",90],[10,"SampleRange",90],[1,"u32"],[10,"ArgminInv",0],[10,"ArgminL1Norm",0],[10,"ArgminL2Norm",0],[10,"ArgminMinMax",0],[10,"ArgminMul",0],[10,"ArgminRandom",0],[10,"Distribution",91],[5,"DistIter",91],[10,"ArgminScaledAdd",0],[10,"ArgminScaledSub",0],[10,"ArgminSignum",0],[10,"ArgminSub",0],[10,"ArgminTranspose",0],[5,"String",92],[5,"Error",93],[5,"TypeId",94],[10,"ArgminWeightedDot",0],[10,"ArgminZero",0],[10,"ArgminZeroLike",0]],"r":[[19,82],[20,89]],"b":[[22,"impl-AsRef%3Cdyn+Error%3E-for-Error"],[23,"impl-AsRef%3Cdyn+Error+%2B+Send+%2B+Sync%3E-for-Error"],[41,"impl-Debug-for-Error"],[42,"impl-Display-for-Error"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABMACQAXAAEAGgABAB8AAQAmAAAAKgACAC4AAQA3AAAASAACAEwAAwA="}],\
["argmin_observer_paramwriter",{"t":"PPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Binary","JSON","ParamWriter","ParamWriterFormat","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","eq","eq","extension","fmt","fmt","from","from","from_subset","from_subset","into","into","is_in_subset","is_in_subset","new","observe_iter","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"argmin_observer_paramwriter"],[42,"core::fmt"],[43,"core::convert"],[44,"argmin::core::kv"],[45,"anyhow"],[46,"core::result"],[47,"argmin::core::state"],[48,"core::option"],[49,"core::any"]],"i":[2,2,0,0,1,2,1,2,1,2,1,2,2,1,2,2,1,2,1,2,1,2,1,2,1,2,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2],"f":"````{ce{}{}}000{bb}{dd}{{ce}f{}{}}0{{}d}{{bb}h}{{dd}h}{dj}{{bl}n}{{dl}n}{cc{}}0::::{ch{}}0{{ccd}b{{A`{j}}}}{{bcAb}{{Af{fAd}}}Ah}=={c{{Aj{e}}}{}{}}0>>{c{{Af{e}}}{}{}}000{cAl{}}0{ce{}{}}0","D":"Ad","p":[[5,"ParamWriter",0],[6,"ParamWriterFormat",0],[1,"unit"],[1,"bool"],[1,"str"],[5,"Formatter",42],[8,"Result",42],[10,"AsRef",43],[5,"KV",44],[5,"Error",45],[6,"Result",46],[10,"State",47],[6,"Option",48],[5,"TypeId",49]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACAABAAFAA0AFQABABkAAQAcAA4A"}],\
["argmin_observer_slog",{"t":"FNNNNNNNNNNNNNNNNNNN","n":["SlogLogger","borrow","borrow_mut","clone","clone_into","from","from_subset","into","is_in_subset","observe_init","observe_iter","term","term_noblock","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip"],"q":[[0,"argmin_observer_slog"],[20,"argmin::core::kv"],[21,"anyhow"],[22,"core::result"],[23,"argmin::core::state"],[24,"core::option"],[25,"core::any"]],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":"`{ce{}{}}0{bb}{{ce}d{}{}}{cc{}}33{cf{}}{{bhcj}{{n{dl}}}A`}{{bcj}{{n{dl}}}A`}{{}b}07{c{{Ab{e}}}{}{}}8{c{{n{e}}}{}{}}0{cAd{}}:","D":"A`","p":[[5,"SlogLogger",0],[1,"unit"],[1,"bool"],[1,"str"],[5,"KV",20],[5,"Error",21],[6,"Result",22],[10,"State",23],[6,"Option",24],[5,"TypeId",25]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAwABAACAAMABwAAAAkAAAAOAAYA"}],\
["argmin_observer_spectator",{"t":"FNNNNNNNNNNNNNNNNNNNNNNNNN","n":["SpectatorBuilder","borrow","borrow_mut","build","channel_capacity","default","from","from_subset","host","into","is_in_subset","name","new","port","select","selected","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","with_channel_capacity","with_host","with_name","with_port"],"q":[[0,"argmin_observer_spectator"],[26,"argmin_observer_spectator::observer"],[27,"alloc::string"],[28,"core::convert"],[29,"std::collections::hash::set"],[30,"core::option"],[31,"core::result"],[32,"core::any"]],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":"`{ce{}{}}0`{bd}{{}b}{cc{}}3{bf}4{ch{}}13{bj}{{b{l{c}}}b{{A`{n}}}}{b{{Ab{f}}}}{c{{Ad{e}}}{}{}}9{c{{Af{e}}}{}{}}0{cAh{}};{{bd}b}{{bc}b{{A`{n}}}}0{{bj}b}","D":"B`","p":[[5,"SpectatorBuilder",0,26],[1,"usize"],[5,"String",27],[1,"bool"],[1,"u16"],[1,"slice"],[1,"str"],[10,"AsRef",28],[5,"HashSet",29],[6,"Option",30],[6,"Result",31],[5,"TypeId",32]],"r":[[0,26]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAoABQACAAEABgAAAAgAAAALAAAAEQAFAA=="}],\
["argmin_testfunctions",{"t":"HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH","n":["ackley","ackley_abc","ackley_abc_derivative","ackley_abc_derivative_const","ackley_abc_hessian","ackley_abc_hessian_const","ackley_derivative","ackley_derivative_const","ackley_hessian","ackley_hessian_const","beale","beale_derivative","beale_hessian","booth","booth_derivative","booth_hessian","bukin_n6","bukin_n6_derivative","bukin_n6_hessian","cross_in_tray","cross_in_tray_derivative","cross_in_tray_hessian","easom","easom_derivative","easom_hessian","eggholder","eggholder_derivative","eggholder_hessian","goldsteinprice","goldsteinprice_derivative","goldsteinprice_hessian","himmelblau","himmelblau_derivative","himmelblau_hessian","holder_table","holder_table_derivative","holder_table_hessian","levy","levy_derivative","levy_derivative_const","levy_hessian","levy_hessian_const","levy_n13","levy_n13_derivative","levy_n13_hessian","matyas","matyas_derivative","matyas_hessian","mccorminck","mccorminck_derivative","mccorminck_hessian","picheny","picheny_derivative","picheny_hessian","rastrigin","rastrigin_a","rastrigin_a_derivative","rastrigin_a_derivative_const","rastrigin_a_hessian","rastrigin_a_hessian_const","rastrigin_derivative","rastrigin_derivative_const","rastrigin_hessian","rastrigin_hessian_const","rosenbrock","rosenbrock_ab","rosenbrock_ab_derivative","rosenbrock_ab_derivative_const","rosenbrock_ab_hessian","rosenbrock_ab_hessian_const","rosenbrock_derivative","rosenbrock_derivative_const","rosenbrock_hessian","rosenbrock_hessian_const","schaffer_n2","schaffer_n2_derivative","schaffer_n2_hessian","schaffer_n4","schaffer_n4_derivative","schaffer_n4_hessian","sphere","sphere_derivative","sphere_derivative_const","sphere_hessian","sphere_hessian_const","styblinski_tang","styblinski_tang_derivative","styblinski_tang_derivative_const","styblinski_tang_hessian","styblinski_tang_hessian_const","threehumpcamel","threehumpcamel_derivative","threehumpcamel_hessian","zero","zero_derivative","zero_derivative_const","zero_hessian","zero_hessian_const"],"q":[[0,"argmin_testfunctions"],[98,"num_traits::float"],[99,"num_traits::cast"],[100,"core::iter::traits::accum"],[101,"alloc::vec"],[102,"core::fmt"],[103,"core::convert"],[104,"core::ops::arith"],[105,"argmin_testfunctions::ackley"],[106,"argmin_testfunctions::beale"],[107,"argmin_testfunctions::booth"],[108,"argmin_testfunctions::bukin"],[109,"argmin_testfunctions::crossintray"],[110,"argmin_testfunctions::easom"],[111,"argmin_testfunctions::eggholder"],[112,"argmin_testfunctions::goldsteinprice"],[113,"argmin_testfunctions::himmelblau"],[114,"argmin_testfunctions::holdertable"],[115,"argmin_testfunctions::levy"],[116,"argmin_testfunctions::matyas"],[117,"argmin_testfunctions::mccorminck"],[118,"argmin_testfunctions::picheny"],[119,"argmin_testfunctions::rastrigin"],[120,"argmin_testfunctions::rosenbrock"],[121,"argmin_testfunctions::schaffer"],[122,"argmin_testfunctions::sphere"],[123,"argmin_testfunctions::styblinskitang"],[124,"argmin_testfunctions::threehumpcamel"],[125,"argmin_testfunctions::zero"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":"{{{b{c}}}c{dfh}}{{{b{c}}ccc}c{dfh}}{{{b{c}}ccc}{{j{c}}}{dfh}}{{{l{c}}ccc}{{l{c}}}{dfh}}{{{b{c}}ccc}{{j{{j{c}}}}}{dfh}}{{{l{c}}ccc}{{l{{l{c}}}}}{dfh}}{{{b{c}}}{{j{c}}}{dfh}}{{{l{c}}}{{l{c}}}{dfh}}{{{b{c}}}{{j{{j{c}}}}}{dfhn}}{{{l{c}}}{{l{{l{c}}}}}{dfh}}{{{l{c}}}c{df}}{{{l{c}}}{{l{c}}}{df}}{{{l{c}}}{{l{{l{c}}}}}{df}}210210{{{l{c}}}c{d{Ab{A`}}f}}{{{l{c}}}{{l{c}}}{d{Ab{A`}}f}}{{{l{c}}}{{l{{l{c}}}}}{d{Ab{A`}}f}}543543543543543?98{{{b{c}}}{{j{{j{c}}}}}{dfh}}7{{{l{c}}}c{dfh}}:8765765765{{{b{c}}}c{dfh}}{{{b{c}}c}c{dfh}}{{{b{c}}c}{{j{c}}}{dfh{Ab{A`}}}}{{{l{c}}c}{{l{c}}}{dfh{Ab{A`}}}}{{{b{c}}c}{{j{{j{c}}}}}{dfh{Ab{A`}}}}{{{b{c}}c}{{l{{l{c}}}}}{dfh{Ab{A`}}}}{{{b{c}}}{{j{c}}}{dfh{Ab{A`}}}}{{{l{c}}}{{l{c}}}{dfh{Ab{A`}}}}{{{b{c}}}{{j{{j{c}}}}}{dfh{Ab{A`}}}}{{{l{c}}}{{l{{l{c}}}}}{dfh{Ab{A`}}}}9{{{b{c}}cc}c{dfh}}{{{b{c}}cc}{{j{c}}}{dfAd}}{{{l{c}}cc}{{l{c}}}{dfAd}}{{{b{c}}cc}{{j{{j{c}}}}}{dfAd}}{{{l{c}}cc}{{l{{l{c}}}}}{dfAd}}{{{b{c}}}{{j{c}}}{dfAd}}{{{l{c}}}{{l{c}}}{dfAd}}{{{b{c}}}{{j{{j{c}}}}}{dfAd}}{{{l{c}}}{{l{{l{c}}}}}{dfAd}}{{{l{c}}}c{df}}{{{l{c}}}{{l{c}}}{df}}{{{l{c}}}{{l{{l{c}}}}}{df}}210{{{b{c}}}c{dfh}}{{{b{c}}}{{j{c}}}{df}}3{{{b{c}}}{{j{{j{c}}}}}{df}}32{{{b{c}}}{{j{c}}}{dfh}}{{{l{c}}}{{l{c}}}{dfh}}{{{b{c}}}{{j{{j{c}}}}}{dfh}}{{{l{c}}}{{l{{l{c}}}}}{dfh}}987{{{b{c}}}c{df}}6958","D":"Lf","p":[[1,"slice"],[10,"Float",98],[10,"FromPrimitive",99],[10,"Sum",100],[5,"Vec",101],[1,"array"],[10,"Debug",102],[1,"f64"],[10,"Into",103],[10,"AddAssign",104]],"r":[[0,105],[1,105],[2,105],[3,105],[4,105],[5,105],[6,105],[7,105],[8,105],[9,105],[10,106],[11,106],[12,106],[13,107],[14,107],[15,107],[16,108],[17,108],[18,108],[19,109],[20,109],[21,109],[22,110],[23,110],[24,110],[25,111],[26,111],[27,111],[28,112],[29,112],[30,112],[31,113],[32,113],[33,113],[34,114],[35,114],[36,114],[37,115],[38,115],[39,115],[40,115],[41,115],[42,115],[43,115],[44,115],[45,116],[46,116],[47,116],[48,117],[49,117],[50,117],[51,118],[52,118],[53,118],[54,119],[55,119],[56,119],[57,119],[58,119],[59,119],[60,119],[61,119],[62,119],[63,119],[64,120],[65,120],[66,120],[67,120],[68,120],[69,120],[70,120],[71,120],[72,120],[73,120],[74,121],[75,121],[76,121],[77,121],[78,121],[79,121],[80,122],[81,122],[82,122],[83,122],[84,122],[85,123],[86,123],[87,123],[88,123],[89,123],[90,124],[91,124],[92,124],[93,125],[94,125],[95,125],[96,125],[97,125]],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["argmin_testfunctions_py",{"t":"QQ","n":["add_function","func"],"q":[[0,"argmin_testfunctions_py"]],"i":[0,0],"f":"``","D":"`","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAIAEAAAAAAAAQACAA=="}],\
["finitediff",{"t":"FINCNNNNNNNNONNNNCNOHHHHHHCHHHHHHHHCCHHHHHHHHHHHHHHHHHHHHCHHHHHHHHCCHHHHHHHHHHHHHH","n":["PerturbationVector","PerturbationVectors","add","array","borrow","borrow_mut","clone","clone_into","default","from","into","new","r_idx","to_owned","try_from","try_into","type_id","vec","vzip","x_idx","central_diff","central_hessian","central_hessian_vec_prod","central_jacobian","central_jacobian_pert","central_jacobian_vec_prod","diff","forward_diff","forward_hessian","forward_hessian_nograd","forward_hessian_nograd_sparse","forward_hessian_vec_prod","forward_jacobian","forward_jacobian_pert","forward_jacobian_vec_prod","hessian","jacobian","central_diff_const","forward_diff_const","central_hessian_const","central_hessian_vec_prod_const","forward_hessian_const","forward_hessian_nograd_const","forward_hessian_nograd_sparse_const","forward_hessian_vec_prod_const","central_jacobian_const","central_jacobian_pert_const","central_jacobian_vec_prod_const","forward_jacobian_const","forward_jacobian_pert_const","forward_jacobian_vec_prod_const","central_diff","central_hessian","central_hessian_vec_prod","central_jacobian","central_jacobian_pert","central_jacobian_vec_prod","diff","forward_diff","forward_hessian","forward_hessian_nograd","forward_hessian_nograd_sparse","forward_hessian_vec_prod","forward_jacobian","forward_jacobian_pert","forward_jacobian_vec_prod","hessian","jacobian","central_diff_vec","forward_diff_vec","central_hessian_vec","central_hessian_vec_prod_vec","forward_hessian_nograd_sparse_vec","forward_hessian_nograd_vec","forward_hessian_vec","forward_hessian_vec_prod_vec","central_jacobian_pert_vec","central_jacobian_vec","central_jacobian_vec_prod_vec","forward_jacobian_pert_vec","forward_jacobian_vec","forward_jacobian_vec_prod_vec"],"q":[[0,"finitediff"],[20,"finitediff::array"],[37,"finitediff::array::diff"],[39,"finitediff::array::hessian"],[45,"finitediff::array::jacobian"],[51,"finitediff::vec"],[68,"finitediff::vec::diff"],[70,"finitediff::vec::hessian"],[76,"finitediff::vec::jacobian"],[82,"finitediff::pert"],[83,"alloc::vec"],[84,"core::result"],[85,"core::any"],[86,"core::ops::function"],[87,"anyhow"],[88,"num_traits::float"],[89,"num_traits::cast"],[90,"core::ops::arith"]],"i":[0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":"``{{bd{f{d}}}b}`{ce{}{}}0{bb}{{ce}h{}{}}{{}b}{cc{}}41`4{c{{j{e}}}{}{}}0{cl{}}`6`{n{{`{{n{{A`{c}}}{{Ab{{j{{A`{c}}Ad}}}}}}}}}{AfAh}}{n{{`{{n{{A`{c}}}{{Ab{{j{{A`{{A`{c}}}}Ad}}}}}}}}}{AfAh}}{n{{`{{n{{A`{c}}{A`{c}}}{{Ab{{j{{A`{c}}Ad}}}}}}}}}{AfAh}}1{n{{`{{n{{A`{c}}Aj}{{Ab{{j{{A`{{A`{c}}}}Ad}}}}}}}}}{AfAhAl}}1`32{n{{`{{n{{A`{c}}}{{Ab{{j{{A`{{A`{c}}}}Ad}}}}}}}}}{AfAhAl}}{n{{`{{n{{A`{c}}{f{{A`{d}}}}}{{Ab{{j{{A`{{A`{c}}}}Ad}}}}}}}}}{AfAhAl}}3423``{{{A`{c}}n}{{j{{A`{c}}Ad}}}{AfAh}}0{{{A`{c}}n}{{j{{A`{{A`{c}}}}Ad}}}{AfAh}}{{{A`{c}}n{A`{c}}}{{j{{A`{c}}Ad}}}{AfAh}}1{{{A`{c}}n}{{j{{A`{{A`{c}}}}Ad}}}{AfAhAl}}{{{A`{c}}n{f{{A`{d}}}}}{{j{{A`{{A`{c}}}}Ad}}}{AfAhAl}}23{{{A`{c}}nAj}{{j{{A`{{A`{c}}}}Ad}}}{AfAhAl}}3403{n{{`{{n{{f{c}}}{{Ab{{j{{f{c}}Ad}}}}}}}}}{AfAh}}{n{{`{{n{{f{c}}}{{Ab{{j{{f{{f{c}}}}Ad}}}}}}}}}{AfAh}}{n{{`{{n{{f{c}}{f{c}}}{{Ab{{j{{f{c}}Ad}}}}}}}}}{AfAh}}1{n{{`{{n{{f{c}}Aj}{{Ab{{j{{f{{f{c}}}}Ad}}}}}}}}}{AfAhAl}}1`32{n{{`{{n{{f{c}}}{{Ab{{j{{f{{f{c}}}}Ad}}}}}}}}}{AfAhAl}}{n{{`{{n{{f{c}}{f{{A`{d}}}}}{{Ab{{j{{f{{f{c}}}}Ad}}}}}}}}}{AfAhAl}}3423``{{{An{c}}n}{{j{{f{c}}Ad}}}{AfAh}}{{{f{c}}n}{{j{{f{c}}Ad}}}Af}{{{An{c}}n}{{j{{f{{f{c}}}}Ad}}}{AfAh}}{{{An{c}}n{An{c}}}{{j{{f{c}}Ad}}}{AfAh}}{{{f{c}}n{f{{A`{d}}}}}{{j{{f{{f{c}}}}Ad}}}{AfAhAl}}{{{f{c}}n}{{j{{f{{f{c}}}}Ad}}}{AfAhAl}}{{{f{c}}n}{{j{{f{{f{c}}}}Ad}}}{AfAh}}{{{f{c}}n{An{c}}}{{j{{f{c}}Ad}}}Af}{{{An{c}}nAj}{{j{{f{{f{c}}}}Ad}}}{AfAhAl}}65{{{f{c}}nAj}{{j{{f{{f{c}}}}Ad}}}{AfAhAl}}32","D":"Ab","p":[[5,"PerturbationVector",0,82],[1,"usize"],[5,"Vec",83],[1,"unit"],[6,"Result",84],[5,"TypeId",85],[10,"Fn",86],[1,"array"],[17,"Output"],[5,"Error",87],[10,"Float",88],[10,"FromPrimitive",89],[8,"PerturbationVectors",0,82],[10,"AddAssign",90],[1,"slice"]],"r":[[0,82],[1,82]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEkAAwAEAAUADgAFABUAPQA="}],\
["spectator",{"t":"PSPGPPPPNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOO","n":["BestParam","DEFAULT_PORT","FuncCounts","Message","NewRun","Param","Samples","Termination","borrow","borrow_mut","clone","clone_into","deserialize","eq","fmt","from","from_subset","into","is_in_subset","pack","serialize","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","unpack","vzip","init_param","iter","iter","iter","iter","kv","kv","max_iter","name","name","name","name","name","name","param","param","selected","settings","solver","target_cost","termination_status","termination_status","time"],"q":[[0,"spectator"],[29,"spectator::Message"],[52,"spectator::message"],[53,"core::result"],[54,"serde::de"],[55,"core::fmt"],[56,"bytes::bytes"],[57,"anyhow"],[58,"serde::ser"],[59,"core::option"],[60,"core::any"],[61,"bytes::bytes_mut"]],"i":[1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,14,15,16,17,18,15,16,14,14,15,16,17,18,19,17,18,14,14,14,14,15,19,15],"f":"````````{ce{}{}}0{bb}{{ce}d{}{}}{c{{f{b}}}h}{{bb}j}{{bl}n}{cc{}}66{cj{}}{b{{f{A`Ab}}}}{{bc}fAd}9{c{{Af{e}}}{}{}}:{c{{f{e}}}{}{}}0{cAh{}}{Aj{{f{bAb}}}}=```````````````````````","D":"Dh","p":[[6,"Message",0,52],[1,"unit"],[6,"Result",53],[10,"Deserializer",54],[1,"bool"],[5,"Formatter",55],[8,"Result",55],[5,"Bytes",56],[5,"Error",57],[10,"Serializer",58],[6,"Option",59],[5,"TypeId",60],[5,"BytesMut",61],[15,"NewRun",29],[15,"Samples",29],[15,"FuncCounts",29],[15,"Param",29],[15,"BestParam",29],[15,"Termination",29]],"r":[[3,52]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABAABQAJAAYAEQAAABMAAAAVAAYAHQAAAA=="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
